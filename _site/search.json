[
  {
    "objectID": "04-data_visualization.html#processing-numbers-is-hard",
    "href": "04-data_visualization.html#processing-numbers-is-hard",
    "title": "Data Visualization",
    "section": "Processing numbers is hard",
    "text": "Processing numbers is hard\n\nCodelibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\n\ntab_ds_data &lt;- datasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  mutate(id = 1:n()) |&gt;\n  pivot_wider(\n    names_from = dataset, \n    values_from = c(x,y),\n    names_vary = 'slowest'\n  ) |&gt;\n  select(-id) |&gt; \n  head(10) \ntab_ds_data |&gt;  \n  gt() |&gt;\n  cols_label(\n    x_dino = 'x',\n    y_dino = 'y',\n    x_star = 'x',\n    y_star = 'y'\n  ) |&gt;\n  fmt_number() |&gt;\n  tab_spanner(\n    label = \"Dino\",\n    columns = ends_with(\"dino\")\n  ) |&gt;\n  cols_align('center') |&gt; \n  tab_spanner(\n    label = \"Star\",\n    columns = ends_with(\"star\")\n  ) |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\nDino\nStar\n\n\nx\ny\nx\ny\n\n\n\n\n55.38\n97.18\n58.21\n91.88\n\n\n51.54\n96.03\n58.20\n92.21\n\n\n46.15\n94.49\n58.72\n90.31\n\n\n42.82\n91.41\n57.28\n89.91\n\n\n40.77\n88.33\n58.08\n92.01\n\n\n38.72\n84.87\n57.49\n88.09\n\n\n35.64\n79.87\n28.09\n63.51\n\n\n33.08\n77.56\n28.09\n63.59\n\n\n28.97\n74.49\n28.09\n63.12\n\n\n26.15\n71.41\n27.58\n62.82"
  },
  {
    "objectID": "04-data_visualization.html#summary-statistics-are-limiting",
    "href": "04-data_visualization.html#summary-statistics-are-limiting",
    "title": "Data Visualization",
    "section": "Summary statistics are limiting",
    "text": "Summary statistics are limiting\n\nCodedatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  summarize(\n    avg_x = round(mean(x), digits = 2), \n    sd_x = round(sd(x), digits = 2),\n    avg_y = round(mean(y), digits = 2),\n    sd_y = round(sd(y), digits = 2),\n    cor_xy = round(cor(x,y), digits = 2)\n    ) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt; \n  gt() |&gt;\n  cols_label(\n    avg_x = \"Mean of x\",\n    sd_x = \"Std. Dev. of x\",\n    avg_y = \"Mean of y\",\n    sd_y = \"Std. Dev. of y\",\n    cor_xy = \"Correlation\") |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\ndataset\nMean of x\nStd. Dev. of x\nMean of y\nStd. Dev. of y\nCorrelation\n\n\n\nDino\n54.26\n16.77\n47.83\n26.94\n-0.06\n\n\nStar\n54.27\n16.77\n47.84\n26.93\n-0.06\n\n\n\n\n\n\n\n\nCodedatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~dataset) +\n  theme_minimal() +\n  theme(\n    panel.grid=element_blank(),\n    strip.text=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "04-data_visualization.html#exercise",
    "href": "04-data_visualization.html#exercise",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nSee beyond summary statistics\n\n\n\nSelect the datasets x_shape & bullseye from the data.frame datasaurus_dozen\n\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\n\n\nCreate a plot showing the two datasets\n\n\n\n\nHere is some code to get you started:\n\nCodelibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nfilter(datasaurus_dozen, dataset %in% c('x_shape', 'bullseye')) |&gt;\n  str(give.attr = FALSE)\n\ntibble [284 × 3] (S3: tbl_df/tbl/data.frame)\n $ dataset: chr [1:284] \"x_shape\" \"x_shape\" \"x_shape\" \"x_shape\" ...\n $ x      : num [1:284] 38.3 35.8 32.8 33.7 37.2 ...\n $ y      : num [1:284] 92.5 94.1 88.5 88.6 83.7 ..."
  },
  {
    "objectID": "04-data_visualization.html#position-is-interpreted-most-accurately",
    "href": "04-data_visualization.html#position-is-interpreted-most-accurately",
    "title": "Data Visualization",
    "section": "Position is interpreted most accurately",
    "text": "Position is interpreted most accurately\n\nCommon y-axis alignment allows for accurate interpretation\nCategories in the x-axis sorted by y-axis value\nPosition should encode the answer to the questions the audience asks\n\n\nCodelibrary(palmerpenguins)\nlibrary(forcats)\nfct_revfreq &lt;- \\(x) fct_rev(fct_infreq(x))\nggplot(penguins, aes(x = fct_revfreq(species))) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "04-data_visualization.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "href": "04-data_visualization.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "title": "Data Visualization",
    "section": "Lengths of unaligned segments are harder to compare",
    "text": "Lengths of unaligned segments are harder to compare\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\nCodeggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "04-data_visualization.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "href": "04-data_visualization.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "title": "Data Visualization",
    "section": "If the total number is not important but sub-group numbers are…",
    "text": "If the total number is not important but sub-group numbers are…\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\nCodeggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\", position = 'dodge') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "04-data_visualization.html#exercise-1",
    "href": "04-data_visualization.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nPerceptual accuracy\n\n\n\n\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\n\n\nCreate a plot showing the two datasets"
  },
  {
    "objectID": "04-data_visualization.html#visualizing-many-categories-badly",
    "href": "04-data_visualization.html#visualizing-many-categories-badly",
    "title": "Data Visualization",
    "section": "Visualizing many categories (badly!)",
    "text": "Visualizing many categories (badly!)\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\nCodelibrary(datasets)\nlibrary(scales)\nggplot(data.frame(abb = state.abb, area = state.area), aes(x = abb, y = area)) +\n  geom_bar(stat = 'identity') +\n  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    labels = label_comma(suffix = \" sq mi\")) + \n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=20),\n    axis.title=element_text(size=30),\n    axis.title.x=element_blank()\n  )"
  },
  {
    "objectID": "04-data_visualization.html#visualizing-many-categories",
    "href": "04-data_visualization.html#visualizing-many-categories",
    "title": "Data Visualization",
    "section": "Visualizing many categories",
    "text": "Visualizing many categories\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\nCodelibrary(colorspace)\nstate_areas &lt;- data.frame(abb = state.abb, area = state.area, name = state.name) |&gt;\n  mutate(abb = fct_reorder(abb, area))\nggplot(state_areas, aes(x = abb, y = area, \n  color = abb == 'MO', fill = abb == 'MO')) +\n  geom_bar(stat = 'identity') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)), breaks = seq(50000,600000, by = 100000),\n    labels = label_comma(suffix = \" sq mi\")) + \n  scale_color_manual(values = c('gray85', 'red')) +\n  scale_fill_manual(values = c('gray20', 'red')) +\n  geom_text(\n    aes(label=abb, y = area), \n    position=position_dodge(width=0.9), \n    vjust=-0.50, \n    color = ifelse(state_areas$abb=='MO', 'red', 'gray20'),\n    size = 8)+\n  labs(title = \"US state areas\") +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=45),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=35),\n    axis.text.x=element_blank(),\n    axis.title=element_blank(),\n    legend.position='none'\n  )"
  },
  {
    "objectID": "04-data_visualization.html#color-intensity-provides-less-accurate-encoding",
    "href": "04-data_visualization.html#color-intensity-provides-less-accurate-encoding",
    "title": "Data Visualization",
    "section": "Color intensity provides less accurate encoding",
    "text": "Color intensity provides less accurate encoding\n\nCodelibrary(maps)\nlibrary(sf)\nlibrary(colorspace)\nus_map_data &lt;- map(\"state\", fill=TRUE, plot =FALSE)\n\nusa &lt;- st_as_sf(map(\"state\", fill=TRUE, plot =FALSE))\nusa &lt;- merge(\n  usa, \n  mutate(state_areas, ID = str_to_lower(name)),\n  )\nggplot(usa) +\n  geom_sf(aes(fill = area), color = \"#2b2b2b\", size=0.125) +\n  coord_sf(crs = st_crs(6350)) +\n  geom_sf_text(aes(label = abb, color = abb == 'MO')) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map() +\n  scale_fill_continuous_sequential(\n    palette = \"Heat\", \n    labels = label_comma(suffix = \" sq mi\") \n    )"
  },
  {
    "objectID": "04-data_visualization.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "href": "04-data_visualization.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "title": "Data Visualization",
    "section": "Colors are useful to mark targets for preattentive processing",
    "text": "Colors are useful to mark targets for preattentive processing\n\nLarge scale spatial data needs to be “projected” to 2D\nMost well known projection is 4326 measured in degrees latitude and longitude\nHowever, there are more accurate projections for specific regions e.g, 3035 for EU+candidates\n\n\nCode## Example using \"shapefile\"\n### e.g. for EU download here https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/nuts\neu &lt;- st_read(\"data/NUTS_RG_60M_2021_3035.shp/\", quiet = TRUE)\neu0 &lt;- filter(eu, LEVL_CODE == 0)\n## Transform to longitude and latitude\neu0 &lt;- eu0 |&gt; st_transform(4326)\neu0_box &lt;- eu0 |&gt; st_bbox()\neu0_box &lt;- eu0_box + c(50, 20, 0, -10)\nggplot(st_crop(eu0, eu0_box))+ \n  geom_sf(fill = 'white', lwd = 1) +\n  geom_sf(data = filter(eu0, CNTR_CODE == 'AT'), color = 'red', lwd =1.5) + \n  coord_sf(crs = st_crs(3035)) +\n  geom_sf_text(aes(label = CNTR_CODE, color = CNTR_CODE == 'AT'), size = 15) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map(base_size = 12)"
  },
  {
    "objectID": "04-data_visualization.html#connectedness-helps-connecting-the-dots",
    "href": "04-data_visualization.html#connectedness-helps-connecting-the-dots",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\nCodecharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams))) +\n    geom_point(aes(color = country), size = 4) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "04-data_visualization.html#connectedness-helps-connecting-the-dots-1",
    "href": "04-data_visualization.html#connectedness-helps-connecting-the-dots-1",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\nCodecharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams), color = country)) +\n    geom_point(size = 4) +\n    geom_line() +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "04-data_visualization.html#use-scatter-plots-to-show-correlation",
    "href": "04-data_visualization.html#use-scatter-plots-to-show-correlation",
    "title": "Data Visualization",
    "section": "Use scatter plots to show correlation",
    "text": "Use scatter plots to show correlation\n\nCodepenguins |&gt;\nggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n    geom_point(size = 4) +\n    geom_smooth(method = 'lm', se = FALSE) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill depth\", x = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        legend.position = 'top',\n    )"
  },
  {
    "objectID": "04-data_visualization.html#use-boxplots-to-show-distributions",
    "href": "04-data_visualization.html#use-boxplots-to-show-distributions",
    "title": "Data Visualization",
    "section": "Use Boxplots to show distributions",
    "text": "Use Boxplots to show distributions\n\nCodepenguins |&gt;\nggplot(aes(y = bill_length_mm, x = fct_reorder(species, bill_length_mm, .fun = median))) +\n    geom_boxplot() +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n    )\n\n\n\n\n\n\n\n\n\n\n\nData Literacy"
  },
  {
    "objectID": "04-data_visualization-page.html",
    "href": "04-data_visualization-page.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\nlibrary(datasauRus)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\n\ntab_ds_data &lt;- datasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  mutate(id = 1:n()) |&gt;\n  pivot_wider(\n    names_from = dataset, \n    values_from = c(x,y),\n    names_vary = 'slowest'\n  ) |&gt;\n  select(-id) |&gt; \n  head(10) \ntab_ds_data |&gt;  \n  gt() |&gt;\n  cols_label(\n    x_dino = 'x',\n    y_dino = 'y',\n    x_star = 'x',\n    y_star = 'y'\n  ) |&gt;\n  fmt_number() |&gt;\n  tab_spanner(\n    label = \"Dino\",\n    columns = ends_with(\"dino\")\n  ) |&gt;\n  cols_align('center') |&gt; \n  tab_spanner(\n    label = \"Star\",\n    columns = ends_with(\"star\")\n  ) |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\nDino\nStar\n\n\nx\ny\nx\ny\n\n\n\n\n55.38\n97.18\n58.21\n91.88\n\n\n51.54\n96.03\n58.20\n92.21\n\n\n46.15\n94.49\n58.72\n90.31\n\n\n42.82\n91.41\n57.28\n89.91\n\n\n40.77\n88.33\n58.08\n92.01\n\n\n38.72\n84.87\n57.49\n88.09\n\n\n35.64\n79.87\n28.09\n63.51\n\n\n33.08\n77.56\n28.09\n63.59\n\n\n28.97\n74.49\n28.09\n63.12\n\n\n26.15\n71.41\n27.58\n62.82\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  summarize(\n    avg_x = round(mean(x), digits = 2), \n    sd_x = round(sd(x), digits = 2),\n    avg_y = round(mean(y), digits = 2),\n    sd_y = round(sd(y), digits = 2),\n    cor_xy = round(cor(x,y), digits = 2)\n    ) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt; \n  gt() |&gt;\n  cols_label(\n    avg_x = \"Mean of x\",\n    sd_x = \"Std. Dev. of x\",\n    avg_y = \"Mean of y\",\n    sd_y = \"Std. Dev. of y\",\n    cor_xy = \"Correlation\") |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\ndataset\nMean of x\nStd. Dev. of x\nMean of y\nStd. Dev. of y\nCorrelation\n\n\n\n\nDino\n54.26\n16.77\n47.83\n26.94\n-0.06\n\n\nStar\n54.27\n16.77\n47.84\n26.93\n-0.06\n\n\n\n\n\n\n\n\n\n\nCode\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~dataset) +\n  theme_minimal() +\n  theme(\n    panel.grid=element_blank(),\n    strip.text=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_text(size=30)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSee beyond summary statistics\n\n\n\n\nSelect the datasets x_shape & bullseye from the data.frame datasaurus_dozen\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\nCreate a plot showing the two datasets\n\n\n\nHere is some code to get you started:\n\n\nCode\nlibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nfilter(datasaurus_dozen, dataset %in% c('x_shape', 'bullseye')) |&gt;\n  str(give.attr = FALSE)\n\n\ntibble [284 × 3] (S3: tbl_df/tbl/data.frame)\n $ dataset: chr [1:284] \"x_shape\" \"x_shape\" \"x_shape\" \"x_shape\" ...\n $ x      : num [1:284] 38.3 35.8 32.8 33.7 37.2 ...\n $ y      : num [1:284] 92.5 94.1 88.5 88.6 83.7 ..."
  },
  {
    "objectID": "04-data_visualization-page.html#processing-numbers-is-hard",
    "href": "04-data_visualization-page.html#processing-numbers-is-hard",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\nlibrary(datasauRus)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\n\ntab_ds_data &lt;- datasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  mutate(id = 1:n()) |&gt;\n  pivot_wider(\n    names_from = dataset, \n    values_from = c(x,y),\n    names_vary = 'slowest'\n  ) |&gt;\n  select(-id) |&gt; \n  head(10) \ntab_ds_data |&gt;  \n  gt() |&gt;\n  cols_label(\n    x_dino = 'x',\n    y_dino = 'y',\n    x_star = 'x',\n    y_star = 'y'\n  ) |&gt;\n  fmt_number() |&gt;\n  tab_spanner(\n    label = \"Dino\",\n    columns = ends_with(\"dino\")\n  ) |&gt;\n  cols_align('center') |&gt; \n  tab_spanner(\n    label = \"Star\",\n    columns = ends_with(\"star\")\n  ) |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\nDino\nStar\n\n\nx\ny\nx\ny\n\n\n\n\n55.38\n97.18\n58.21\n91.88\n\n\n51.54\n96.03\n58.20\n92.21\n\n\n46.15\n94.49\n58.72\n90.31\n\n\n42.82\n91.41\n57.28\n89.91\n\n\n40.77\n88.33\n58.08\n92.01\n\n\n38.72\n84.87\n57.49\n88.09\n\n\n35.64\n79.87\n28.09\n63.51\n\n\n33.08\n77.56\n28.09\n63.59\n\n\n28.97\n74.49\n28.09\n63.12\n\n\n26.15\n71.41\n27.58\n62.82"
  },
  {
    "objectID": "04-data_visualization-page.html#summary-statistics-are-limiting",
    "href": "04-data_visualization-page.html#summary-statistics-are-limiting",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  summarize(\n    avg_x = round(mean(x), digits = 2), \n    sd_x = round(sd(x), digits = 2),\n    avg_y = round(mean(y), digits = 2),\n    sd_y = round(sd(y), digits = 2),\n    cor_xy = round(cor(x,y), digits = 2)\n    ) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt; \n  gt() |&gt;\n  cols_label(\n    avg_x = \"Mean of x\",\n    sd_x = \"Std. Dev. of x\",\n    avg_y = \"Mean of y\",\n    sd_y = \"Std. Dev. of y\",\n    cor_xy = \"Correlation\") |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\ndataset\nMean of x\nStd. Dev. of x\nMean of y\nStd. Dev. of y\nCorrelation\n\n\n\n\nDino\n54.26\n16.77\n47.83\n26.94\n-0.06\n\n\nStar\n54.27\n16.77\n47.84\n26.93\n-0.06\n\n\n\n\n\n\n\n\n\n\nCode\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~dataset) +\n  theme_minimal() +\n  theme(\n    panel.grid=element_blank(),\n    strip.text=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "04-data_visualization-page.html#exercise",
    "href": "04-data_visualization-page.html#exercise",
    "title": "Data Visualization",
    "section": "",
    "text": "See beyond summary statistics\n\n\n\n\nSelect the datasets x_shape & bullseye from the data.frame datasaurus_dozen\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\nCreate a plot showing the two datasets\n\n\n\nHere is some code to get you started:\n\n\nCode\nlibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nfilter(datasaurus_dozen, dataset %in% c('x_shape', 'bullseye')) |&gt;\n  str(give.attr = FALSE)\n\n\ntibble [284 × 3] (S3: tbl_df/tbl/data.frame)\n $ dataset: chr [1:284] \"x_shape\" \"x_shape\" \"x_shape\" \"x_shape\" ...\n $ x      : num [1:284] 38.3 35.8 32.8 33.7 37.2 ...\n $ y      : num [1:284] 92.5 94.1 88.5 88.6 83.7 ..."
  },
  {
    "objectID": "04-data_visualization-page.html#position-is-interpreted-most-accurately",
    "href": "04-data_visualization-page.html#position-is-interpreted-most-accurately",
    "title": "Data Visualization",
    "section": "Position is interpreted most accurately",
    "text": "Position is interpreted most accurately\n\nCommon y-axis alignment allows for accurate interpretation\nCategories in the x-axis sorted by y-axis value\nPosition should encode the answer to the questions the audience asks\n\n\n\nCode\nlibrary(palmerpenguins)\nlibrary(forcats)\nfct_revfreq &lt;- \\(x) fct_rev(fct_infreq(x))\nggplot(penguins, aes(x = fct_revfreq(species))) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "04-data_visualization-page.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "href": "04-data_visualization-page.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "title": "Data Visualization",
    "section": "Lengths of unaligned segments are harder to compare",
    "text": "Lengths of unaligned segments are harder to compare\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\n\nCode\nggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "04-data_visualization-page.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "href": "04-data_visualization-page.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "title": "Data Visualization",
    "section": "If the total number is not important but sub-group numbers are…",
    "text": "If the total number is not important but sub-group numbers are…\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\n\nCode\nggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\", position = 'dodge') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "04-data_visualization-page.html#exercise-1",
    "href": "04-data_visualization-page.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nPerceptual accuracy\n\n\n\n\n\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\nCreate a plot showing the two datasets"
  },
  {
    "objectID": "04-data_visualization-page.html#visualizing-many-categories-badly",
    "href": "04-data_visualization-page.html#visualizing-many-categories-badly",
    "title": "Data Visualization",
    "section": "Visualizing many categories (badly!)",
    "text": "Visualizing many categories (badly!)\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\n\nCode\nlibrary(datasets)\nlibrary(scales)\nggplot(data.frame(abb = state.abb, area = state.area), aes(x = abb, y = area)) +\n  geom_bar(stat = 'identity') +\n  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    labels = label_comma(suffix = \" sq mi\")) + \n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=20),\n    axis.title=element_text(size=30),\n    axis.title.x=element_blank()\n  )"
  },
  {
    "objectID": "04-data_visualization-page.html#visualizing-many-categories",
    "href": "04-data_visualization-page.html#visualizing-many-categories",
    "title": "Data Visualization",
    "section": "Visualizing many categories",
    "text": "Visualizing many categories\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\n\nCode\nlibrary(colorspace)\nstate_areas &lt;- data.frame(abb = state.abb, area = state.area, name = state.name) |&gt;\n  mutate(abb = fct_reorder(abb, area))\nggplot(state_areas, aes(x = abb, y = area, \n  color = abb == 'MO', fill = abb == 'MO')) +\n  geom_bar(stat = 'identity') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)), breaks = seq(50000,600000, by = 100000),\n    labels = label_comma(suffix = \" sq mi\")) + \n  scale_color_manual(values = c('gray85', 'red')) +\n  scale_fill_manual(values = c('gray20', 'red')) +\n  geom_text(\n    aes(label=abb, y = area), \n    position=position_dodge(width=0.9), \n    vjust=-0.50, \n    color = ifelse(state_areas$abb=='MO', 'red', 'gray20'),\n    size = 8)+\n  labs(title = \"US state areas\") +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=45),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=35),\n    axis.text.x=element_blank(),\n    axis.title=element_blank(),\n    legend.position='none'\n  )"
  },
  {
    "objectID": "04-data_visualization-page.html#color-intensity-provides-less-accurate-encoding",
    "href": "04-data_visualization-page.html#color-intensity-provides-less-accurate-encoding",
    "title": "Data Visualization",
    "section": "Color intensity provides less accurate encoding",
    "text": "Color intensity provides less accurate encoding\n\n\nCode\nlibrary(maps)\nlibrary(sf)\n\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\nCode\nlibrary(colorspace)\nus_map_data &lt;- map(\"state\", fill=TRUE, plot =FALSE)\n\nusa &lt;- st_as_sf(map(\"state\", fill=TRUE, plot =FALSE))\nusa &lt;- merge(\n  usa, \n  mutate(state_areas, ID = str_to_lower(name)),\n  )\nggplot(usa) +\n  geom_sf(aes(fill = area), color = \"#2b2b2b\", size=0.125) +\n  coord_sf(crs = st_crs(6350)) +\n  geom_sf_text(aes(label = abb, color = abb == 'MO')) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map() +\n  scale_fill_continuous_sequential(\n    palette = \"Heat\", \n    labels = label_comma(suffix = \" sq mi\") \n    )"
  },
  {
    "objectID": "04-data_visualization-page.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "href": "04-data_visualization-page.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "title": "Data Visualization",
    "section": "Colors are useful to mark targets for preattentive processing",
    "text": "Colors are useful to mark targets for preattentive processing\n\nLarge scale spatial data needs to be “projected” to 2D\nMost well known projection is 4326 measured in degrees latitude and longitude\nHowever, there are more accurate projections for specific regions e.g, 3035 for EU+candidates\n\n\n\nCode\n## Example using \"shapefile\"\n### e.g. for EU download here https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/nuts\neu &lt;- st_read(\"data/NUTS_RG_60M_2021_3035.shp/\", quiet = TRUE)\neu0 &lt;- filter(eu, LEVL_CODE == 0)\n## Transform to longitude and latitude\neu0 &lt;- eu0 |&gt; st_transform(4326)\neu0_box &lt;- eu0 |&gt; st_bbox()\neu0_box &lt;- eu0_box + c(50, 20, 0, -10)\nggplot(st_crop(eu0, eu0_box))+ \n  geom_sf(fill = 'white', lwd = 1) +\n  geom_sf(data = filter(eu0, CNTR_CODE == 'AT'), color = 'red', lwd =1.5) + \n  coord_sf(crs = st_crs(3035)) +\n  geom_sf_text(aes(label = CNTR_CODE, color = CNTR_CODE == 'AT'), size = 15) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map(base_size = 12) \n\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries"
  },
  {
    "objectID": "04-data_visualization-page.html#connectedness-helps-connecting-the-dots",
    "href": "04-data_visualization-page.html#connectedness-helps-connecting-the-dots",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\n\nCode\ncharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \n\n\n`summarise()` has grouped output by 'country'. You can override using the\n`.groups` argument.\n\n\nCode\ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams))) +\n    geom_point(aes(color = country), size = 4) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "04-data_visualization-page.html#connectedness-helps-connecting-the-dots-1",
    "href": "04-data_visualization-page.html#connectedness-helps-connecting-the-dots-1",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\n\nCode\ncharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \n\n\n`summarise()` has grouped output by 'country'. You can override using the\n`.groups` argument.\n\n\nCode\ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams), color = country)) +\n    geom_point(size = 4) +\n    geom_line() +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "04-data_visualization-page.html#use-scatter-plots-to-show-correlation",
    "href": "04-data_visualization-page.html#use-scatter-plots-to-show-correlation",
    "title": "Data Visualization",
    "section": "Use scatter plots to show correlation",
    "text": "Use scatter plots to show correlation\n\n\nCode\npenguins |&gt;\nggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n    geom_point(size = 4) +\n    geom_smooth(method = 'lm', se = FALSE) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill depth\", x = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        legend.position = 'top',\n    )\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "04-data_visualization-page.html#use-boxplots-to-show-distributions",
    "href": "04-data_visualization-page.html#use-boxplots-to-show-distributions",
    "title": "Data Visualization",
    "section": "Use Boxplots to show distributions",
    "text": "Use Boxplots to show distributions\n\n\nCode\npenguins |&gt;\nggplot(aes(y = bill_length_mm, x = fct_reorder(species, bill_length_mm, .fun = median))) +\n    geom_boxplot() +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n    )\n\n\nWarning: `fct_reorder()` removing 2 missing values.\nℹ Use `.na_rm = TRUE` to silence this message.\nℹ Use `.na_rm = FALSE` to preserve NAs.\n`fct_reorder()` removing 2 missing values.\nℹ Use `.na_rm = TRUE` to silence this message.\nℹ Use `.na_rm = FALSE` to preserve NAs.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "00-admin.html#who-am-i",
    "href": "00-admin.html#who-am-i",
    "title": "Introduction to the Course",
    "section": "Who am I?",
    "text": "Who am I?\n\n\n\nI’m Daniel 👋\nMasters in Economics with major in Mathematics\nData-driven research in various fields\n\nDissertation: What shapes demand in the music industry?\n\nArtist misconduct (#MeToo) increases demand\nIdentification of playlists important for artist success\n\nOrgan donation\n\nSwitching from opt-in to opt-out does not increase available organs\n\nStatistical software (e.g., shrinkDSM)\nBiomarker analysis for cancer research (e.g., FGF8)\n\nFraud detection for one of the top 5 music markets world-wide\n\nanalysis of \\(\\sim 200\\) billion datapoints\n\n\n\n\n\n\n\nMy Rabbit Georgie"
  },
  {
    "objectID": "00-admin.html#why-am-i-here",
    "href": "00-admin.html#why-am-i-here",
    "title": "Introduction to the Course",
    "section": "Why am I here?",
    "text": "Why am I here?\n\n\n\n\n\n\n\n\nHigh-level Goals\n\n\n\n\nHave fun\nGain confidence in analysis\nBuild a solid foundation for current and future data-based projects\nLearn to transform raw data into (business/economic) insights\nProvide a safe space for exploration\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplicit Goals\n\n\n\n\nSet up a development environment for data-based projects\n\nUse extensible and future-proof tools\n\nGet familiar with R, Quarto, and Git\n\nCreate a flexible, documented, reproducible, and collaborative workflow\n\nGet familiar with concepts to process, visualize, and analyze data\n\nMake conscious decisions about each step\nConfidently choose models and methods appropriate for a given situation\n\nGain practical experience through conducting a short data analysis\nGrading based on engagement\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNon-goals\n\n\n\nLearn a “recipe” for data analysis\n\nGreat for class becaus it’s easy\nNot useful in practice\n\nProvide a formal introduction to statistics/data-science\n\nRequires it’s own course\nFocus here on intuition\n\nHarsh grading\n\nThis is an elective :)\nDiscourages exploration"
  },
  {
    "objectID": "00-admin.html#why-are-you-here",
    "href": "00-admin.html#why-are-you-here",
    "title": "Introduction to the Course",
    "section": "Why are you here?",
    "text": "Why are you here?\n\n\n\n10 minutes\n\n\n\nCreate a name-tag for yourself (preferably A4 so I can read it)\nFind someone in class you have not yet met\nDiscuss the following questions and take notes of your neighbors answers\n\nWho are you?\nWhat are you interested in?\nWhat constitutes a good learning environment for me?\nHave you used R or another statistical software before?\nHow can I measure my success in the course?\n\nFormulate 3 measures (e.g., I learned how to run linear regression in R for my thesis)\n\nWhat can Daniel do in each lecture for me to be successful in the course?\n\nFormulate 3 suggestions (e.g., Provide multiple examples for each concept)\n\nWhat can I do in each lecture to be successful in the course?\n\nFormulate 3 review questions for after the lecture (e.g., Did I ask questions if something was unclear?, Did I party yesterday and showed up hung-over?)\n\n\n\n\n\n\n\nIntroduce your neigbor to the class"
  },
  {
    "objectID": "00-admin.html#whats-next",
    "href": "00-admin.html#whats-next",
    "title": "Introduction to the Course",
    "section": "What’s next?",
    "text": "What’s next?\n\n\n\n\n\n\nGrading\n\n\n\n\n25% class participation\n\nToday: upload 3 suggestions to make your neighbor successful\nEvery lecture: either participate in class directly or upload a short review to Canvas after class\n10% for each Saturday lecture, 5% for Wednesday\n\n\n30% project plan\n\nDiscussion next Wednesday (2024.03.13)\nDue next Friday (2024.03.15)\nUpload to Canvas\nIncludes:\n\nResearch question\nA dataset that can be used to answer the research question\nA target audience\nOptionally: a first idea on how to answer the research question\n\n\n\n45% project presentation\n\nPresentations on Wednesday 11 days from today (2023.03.20)\n\\(\\sim 10 min\\) per presentation\n\\(\\sim 5 min\\) discussion for paired groups\nUpload slides to Canvas\nIncludes:\n\nIntroduction to the research question\nShort literature review\nIntroduction to the data\nModel-free evidence (e.g., visualizations)\nModel-based evidence (e.g., regression analysis)\nConclustion & Recommendation\nOptional: Short discussion of solutions to challenges faced\n\n\n\n\n\n\n\n\n\n\n\nData Literacy"
  },
  {
    "objectID": "00-admin-page.html",
    "href": "00-admin-page.html",
    "title": "Introduction to the Course",
    "section": "",
    "text": "I’m Daniel 👋\nMasters in Economics with major in Mathematics\nData-driven research in various fields\n\nDissertation: What shapes demand in the music industry?\n\nArtist misconduct (#MeToo) increases demand\nIdentification of playlists important for artist success\n\nOrgan donation\n\nSwitching from opt-in to opt-out does not increase available organs\n\nStatistical software (e.g., shrinkDSM)\nBiomarker analysis for cancer research (e.g., FGF8)\n\nFraud detection for one of the top 5 music markets world-wide\n\nanalysis of \\(\\sim 200\\) billion datapoints\n\n\n\n\n\n\n\nMy Rabbit Georgie\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHigh-level Goals\n\n\n\n\n\nHave fun\nGain confidence in analysis\nBuild a solid foundation for current and future data-based projects\nLearn to transform raw data into (business/economic) insights\nProvide a safe space for exploration\n\n\n\n\n\n\n\n\n\n\n\n\nExplicit Goals\n\n\n\n\n\nSet up a development environment for data-based projects\n\nUse extensible and future-proof tools\n\nGet familiar with R, Quarto, and Git\n\nCreate a flexible, documented, reproducible, and collaborative workflow\n\nGet familiar with concepts to process, visualize, and analyze data\n\nMake conscious decisions about each step\nConfidently choose models and methods appropriate for a given situation\n\nGain practical experience through conducting a short data analysis\nGrading based on engagement\n\n\n\n\n\n\n\n\n\n\n\n\n\nNon-goals\n\n\n\n\nLearn a “recipe” for data analysis\n\nGreat for class becaus it’s easy\nNot useful in practice\n\nProvide a formal introduction to statistics/data-science\n\nRequires it’s own course\nFocus here on intuition\n\nHarsh grading\n\nThis is an elective :)\nDiscourages exploration\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10 minutes\n\n\n\n\nCreate a name-tag for yourself (preferably A4 so I can read it)\nFind someone in class you have not yet met\nDiscuss the following questions and take notes of your neighbors answers\n\nWho are you?\nWhat are you interested in?\nWhat constitutes a good learning environment for me?\nHave you used R or another statistical software before?\nHow can I measure my success in the course?\n\nFormulate 3 measures (e.g., I learned how to run linear regression in R for my thesis)\n\nWhat can Daniel do in each lecture for me to be successful in the course?\n\nFormulate 3 suggestions (e.g., Provide multiple examples for each concept)\n\nWhat can I do in each lecture to be successful in the course?\n\nFormulate 3 review questions for after the lecture (e.g., Did I ask questions if something was unclear?, Did I party yesterday and showed up hung-over?)\n\n\n\n\n\n. . .\nIntroduce your neigbor to the class\n\n\n\n\n\n\n\n\n\nGrading\n\n\n\n\n\n25% class participation\n\nToday: upload 3 suggestions to make your neighbor successful\nEvery lecture: either participate in class directly or upload a short review to Canvas after class\n10% for each Saturday lecture, 5% for Wednesday\n\n\n30% project plan\n\nDiscussion next Wednesday (2024.03.13)\nDue next Friday (2024.03.15)\nUpload to Canvas\nIncludes:\n\nResearch question\nA dataset that can be used to answer the research question\nA target audience\nOptionally: a first idea on how to answer the research question\n\n\n\n45% project presentation\n\nPresentations on Wednesday 11 days from today (2023.03.20)\n\\(\\sim 10 min\\) per presentation\n\\(\\sim 5 min\\) discussion for paired groups\nUpload slides to Canvas\nIncludes:\n\nIntroduction to the research question\nShort literature review\nIntroduction to the data\nModel-free evidence (e.g., visualizations)\nModel-based evidence (e.g., regression analysis)\nConclustion & Recommendation\nOptional: Short discussion of solutions to challenges faced"
  },
  {
    "objectID": "00-admin-page.html#who-am-i",
    "href": "00-admin-page.html#who-am-i",
    "title": "Introduction to the Course",
    "section": "",
    "text": "I’m Daniel 👋\nMasters in Economics with major in Mathematics\nData-driven research in various fields\n\nDissertation: What shapes demand in the music industry?\n\nArtist misconduct (#MeToo) increases demand\nIdentification of playlists important for artist success\n\nOrgan donation\n\nSwitching from opt-in to opt-out does not increase available organs\n\nStatistical software (e.g., shrinkDSM)\nBiomarker analysis for cancer research (e.g., FGF8)\n\nFraud detection for one of the top 5 music markets world-wide\n\nanalysis of \\(\\sim 200\\) billion datapoints\n\n\n\n\n\n\n\nMy Rabbit Georgie"
  },
  {
    "objectID": "00-admin-page.html#why-am-i-here",
    "href": "00-admin-page.html#why-am-i-here",
    "title": "Introduction to the Course",
    "section": "",
    "text": "High-level Goals\n\n\n\n\n\nHave fun\nGain confidence in analysis\nBuild a solid foundation for current and future data-based projects\nLearn to transform raw data into (business/economic) insights\nProvide a safe space for exploration\n\n\n\n\n\n\n\n\n\n\n\n\nExplicit Goals\n\n\n\n\n\nSet up a development environment for data-based projects\n\nUse extensible and future-proof tools\n\nGet familiar with R, Quarto, and Git\n\nCreate a flexible, documented, reproducible, and collaborative workflow\n\nGet familiar with concepts to process, visualize, and analyze data\n\nMake conscious decisions about each step\nConfidently choose models and methods appropriate for a given situation\n\nGain practical experience through conducting a short data analysis\nGrading based on engagement\n\n\n\n\n\n\n\n\n\n\n\n\n\nNon-goals\n\n\n\n\nLearn a “recipe” for data analysis\n\nGreat for class becaus it’s easy\nNot useful in practice\n\nProvide a formal introduction to statistics/data-science\n\nRequires it’s own course\nFocus here on intuition\n\nHarsh grading\n\nThis is an elective :)\nDiscourages exploration"
  },
  {
    "objectID": "00-admin-page.html#why-are-you-here",
    "href": "00-admin-page.html#why-are-you-here",
    "title": "Introduction to the Course",
    "section": "",
    "text": "10 minutes\n\n\n\n\nCreate a name-tag for yourself (preferably A4 so I can read it)\nFind someone in class you have not yet met\nDiscuss the following questions and take notes of your neighbors answers\n\nWho are you?\nWhat are you interested in?\nWhat constitutes a good learning environment for me?\nHave you used R or another statistical software before?\nHow can I measure my success in the course?\n\nFormulate 3 measures (e.g., I learned how to run linear regression in R for my thesis)\n\nWhat can Daniel do in each lecture for me to be successful in the course?\n\nFormulate 3 suggestions (e.g., Provide multiple examples for each concept)\n\nWhat can I do in each lecture to be successful in the course?\n\nFormulate 3 review questions for after the lecture (e.g., Did I ask questions if something was unclear?, Did I party yesterday and showed up hung-over?)\n\n\n\n\n\n. . .\nIntroduce your neigbor to the class"
  },
  {
    "objectID": "00-admin-page.html#whats-next",
    "href": "00-admin-page.html#whats-next",
    "title": "Introduction to the Course",
    "section": "",
    "text": "Grading\n\n\n\n\n\n25% class participation\n\nToday: upload 3 suggestions to make your neighbor successful\nEvery lecture: either participate in class directly or upload a short review to Canvas after class\n10% for each Saturday lecture, 5% for Wednesday\n\n\n30% project plan\n\nDiscussion next Wednesday (2024.03.13)\nDue next Friday (2024.03.15)\nUpload to Canvas\nIncludes:\n\nResearch question\nA dataset that can be used to answer the research question\nA target audience\nOptionally: a first idea on how to answer the research question\n\n\n\n45% project presentation\n\nPresentations on Wednesday 11 days from today (2023.03.20)\n\\(\\sim 10 min\\) per presentation\n\\(\\sim 5 min\\) discussion for paired groups\nUpload slides to Canvas\nIncludes:\n\nIntroduction to the research question\nShort literature review\nIntroduction to the data\nModel-free evidence (e.g., visualizations)\nModel-based evidence (e.g., regression analysis)\nConclustion & Recommendation\nOptional: Short discussion of solutions to challenges faced"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "This website covers the course 6235 Data Literacy (Summer 2024) at WU Vienna (login required for Canvas) created at the Institute for Retailing & Data Science. The main aims of the course are to build a solid foundation for current and future data-based projects and to gain confidence in presenting your analyses through a princpled workflow. This website is updated as more materials are added. The main format of the material is RevealJS and links to the slides can be found on the right-hand side of each page. The pages themselves are automatically generated from the same Quarto files. You will learn how this works as part of this course 😊.\n\nThis course covers\n\nIntroduction to the course\nIntroduction to R\nIntroduction to Quarto\nIntroduction to Git\nPrinciples of Data Visualization\nIntroduction to Causal Modeling\nIntroduction to Predictive Modeling"
  },
  {
    "objectID": "01-introduction_to_r.html#why-r",
    "href": "01-introduction_to_r.html#why-r",
    "title": "Introduction to R",
    "section": "Why R?",
    "text": "Why R?\n\nWell established in business and scientific computing\nVery powerful language\n\nExpress any operation in terms of\nOften complex functions are already implemented\n\n\nVery good package manager and ecosystem\n\nWe will use many tools created by companies, universities, and other R community members\n\n\nVery good for reproducibility\n\nCode documents the process\nShould run the same on my and your machine\nShould be easily adaptable to changing data\n\n\nOpen source\n\nAll packages can be inspected\nFree to install and use on any computer\n\n\nDeveloped (partly) and hosted at WU 😋"
  },
  {
    "objectID": "01-introduction_to_r.html#what-do-we-need",
    "href": "01-introduction_to_r.html#what-do-we-need",
    "title": "Introduction to R",
    "section": "What do we need?",
    "text": "What do we need?\n\n\n\nThe R interpreter\n\nThe program that “interprets” R code and runs it\nVery bare-bones, essentially just a text field\nDoes not store code files for reproducibility\n\n\n\n\nprint(\"Hello, WU!\")\n\n\n\n[1] \"Hello, WU!\"\n\npaste0(\"One plus two is: \", 1 + 2)\n\n[1] \"One plus two is: 3\"\n\nc &lt;- data.frame(p = seq(0, 2 * pi, by = 0.001))\nc$h_x &lt;- 16 * sin(c$p)^3\nc$h_y &lt;- 13 * cos(c$p) - 5 * cos(2 * c$p) - 2 * cos(3 * c$p) - cos(4 * c$p)\nplot(c$h_x, c$h_y, type = \"l\", main = \"I &lt;3 R\", frame = F, xlab = NA, ylab = NA)\n\n\n\n\n\n\n\n\n\nAn Integrated Development Environment (IDE)\n\nMakes writing and storing R code easier (more fun!)\nThree options compatible with this course:\n\n\nR Studio Desktop (Recommended)\n\nFocused on R\nEasiest option\n\n\n\nVS Code\n\nRecommended if you (plan to) use other languages (Python, C++, Julia, etc.)\nNeeds extension for R but works well\n\n\n\nJupyterLab\n\n“Notebooks” for R, Python, and Julia\nOutput generated directly under code “cells”"
  },
  {
    "objectID": "01-introduction_to_r.html#if-you-already-know-r",
    "href": "01-introduction_to_r.html#if-you-already-know-r",
    "title": "Introduction to R",
    "section": "If you already know R",
    "text": "If you already know R\n\n\n\nMy favorite R package\n\n\n\nDownload the presentation template my_favorite_r_package.qmd and the bibliography file data_literacy.bib from Canvas\nSelect a package that was useful to you in the past\nPrepare a short presentation about the package\n\nInclude examples of how to use the package\nShow in which situations that is useful"
  },
  {
    "objectID": "01-introduction_to_r.html#basic-workflow-r-studio",
    "href": "01-introduction_to_r.html#basic-workflow-r-studio",
    "title": "Introduction to R",
    "section": "Basic Workflow (R Studio)",
    "text": "Basic Workflow (R Studio)\n\n\nCtrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "01-introduction_to_r.html#basic-workflow-vs-code",
    "href": "01-introduction_to_r.html#basic-workflow-vs-code",
    "title": "Introduction to R",
    "section": "Basic Workflow (VS Code)",
    "text": "Basic Workflow (VS Code)\n\n\nCtrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-comments-assignment",
    "href": "01-introduction_to_r.html#r-syntax-comments-assignment",
    "title": "Introduction to R",
    "section": "R Syntax: comments, assignment",
    "text": "R Syntax: comments, assignment\n\n# This is a comment\nprint(\"Hi\") # also a comment\n\n[1] \"Hi\"\n\n## Assignment of varibale names\nx &lt;- 1\nx\n\n[1] 1\n\n## Missing values\nNA\n\n[1] NA\n\n## Vectors\ny &lt;- c(1, 2, 3, NA)\ny\n\n[1]  1  2  3 NA"
  },
  {
    "objectID": "01-introduction_to_r.html#functions",
    "href": "01-introduction_to_r.html#functions",
    "title": "Introduction to R",
    "section": "Functions",
    "text": "Functions\n\n## built-in\nsum(y)\n\n[1] NA\n\nsum(y, na.rm = FALSE)\n\n[1] NA\n\nsum(y, na.rm = TRUE)\n\n[1] 6\n\n## User functions\na_plus_b &lt;- function(a, b = 1) {\n    return(a + b)\n}\na_plus_b(y)\n\n[1]  2  3  4 NA\n\na_plus_b(y, 2)\n\n[1]  3  4  5 NA\n\na_plus_b(b = 2, a = y)\n\n[1]  3  4  5 NA\n\n## Functions provided by packages\n## Installation\n#install.packages(\"ineq\")\nineq::Gini(y)\n\n[1] 0.2222222\n\n## or\nlibrary(ineq)\nGini(y)\n\n[1] 0.2222222\n\n## Help \n?Gini"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-indexing-logic",
    "href": "01-introduction_to_r.html#r-syntax-indexing-logic",
    "title": "Introduction to R",
    "section": "R Syntax: indexing, logic",
    "text": "R Syntax: indexing, logic\n\ny[1]\n\n[1] 1\n\ny[-1]\n\n[1]  2  3 NA\n\ny[2:3]\n\n[1] 2 3\n\ny[c(1, 3, 4)]\n\n[1]  1  3 NA\n\nset.seed(1)\nx &lt;- y / 2 + rnorm(length(y))\ncbind(y, x)\n\n      y          x\n[1,]  1 -0.1264538\n[2,]  2  1.1836433\n[3,]  3  0.6643714\n[4,] NA         NA\n\ny &gt; 2\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 & x &gt; 0\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 | x &gt; 0\n\n[1] FALSE  TRUE  TRUE    NA\n\ny[y &gt; 2 | x &gt; 0]\n\n[1]  2  3 NA"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-loops-ranges",
    "href": "01-introduction_to_r.html#r-syntax-loops-ranges",
    "title": "Introduction to R",
    "section": "R Syntax: loops, ranges",
    "text": "R Syntax: loops, ranges\n\n## 'elem' is a temporary variable\nfor (elem in y) {\n    print(paste(\"Current y value is:\", elem))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## 'seq_along' returns a vector which indexes the argument\nfor (i in seq_along(y)) {\n    print(paste(\"Current y value is:\", y[i]))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## set.seed guarantees the same random numbers every time\nset.seed(1)\ntotal &lt;- 0\nwhile (total &lt; 1) {\n    ## runif generates random numbers between 0 and 1\n    total &lt;- total + runif(1)\n    print(paste(\"Current total value is:\", total))\n}\n\n[1] \"Current total value is: 0.2655086631421\"\n[1] \"Current total value is: 0.63763256277889\"\n[1] \"Current total value is: 1.21048592613079\"\n\n## ranges\n1:3\n\n[1] 1 2 3\n\n10:3\n\n[1] 10  9  8  7  6  5  4  3\n\nseq(3, 11, by = 2)\n\n[1]  3  5  7  9 11"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-conditional-logic",
    "href": "01-introduction_to_r.html#r-syntax-conditional-logic",
    "title": "Introduction to R",
    "section": "R Syntax: conditional logic",
    "text": "R Syntax: conditional logic\n\nz &lt;- -2:3\nfor (x in z) {\n  print(paste(\"x =\", x))\n    if (x &gt; 0) {\n        print(\"x is positive\")\n    } else if (x &gt; 2) {\n        print(\"x is greater than 2\")\n    } else if (x &lt; 0) {\n        print(\"x is negative\")\n    } else if (x == 0) {\n        print(\"x is zero\")\n    }\n}\n\n[1] \"x = -2\"\n[1] \"x is negative\"\n[1] \"x = -1\"\n[1] \"x is negative\"\n[1] \"x = 0\"\n[1] \"x is zero\"\n[1] \"x = 1\"\n[1] \"x is positive\"\n[1] \"x = 2\"\n[1] \"x is positive\"\n[1] \"x = 3\"\n[1] \"x is positive\"\n\nz[z &lt;= 0]\n\n[1] -2 -1  0\n\nz[z &gt;= 0]\n\n[1] 0 1 2 3\n\nz[z != 0]\n\n[1] -2 -1  1  2  3\n\nz[! z &lt; 0]\n\n[1] 0 1 2 3"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise",
    "href": "01-introduction_to_r.html#exercise",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nWrite your own function\n\n\n\nThe function should take two arguments a and b\n\nFirst, check if a and b have the same number of elements (see ?length)\n\nIf they have a different number of elements, return NA\n\n\n\nIterate over the elements of a and b and check which vector’s element is larger (or if they are equal)\nIf they are equal print the index of the element and “equal”\nIf the element in a is larger print the index of the elemnt and “a larger”\nIf the element in b is larger print the index of the elemnt and “b larger”\n\n\n\n\nExample 1\n\n\na is: 1 2 3 \n\n\nb is: 1 2 3 4 \n\n\nResult:\n\n\n[1] NA\n\n\nExample 2\n\n\na is: 1 2 3 \n\n\nb is: 0 2 4 \n\n\nResult:\n\n\n[1] \"1 a larger\"\n\n\n[1] \"2 equal\"\n\n\n[1] \"3 b larger\""
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-frames-creation-and-access",
    "href": "01-introduction_to_r.html#rectangular-data-frames-creation-and-access",
    "title": "Introduction to R",
    "section": "Rectangular data frames: creation and access",
    "text": "Rectangular data frames: creation and access\n\ndata &lt;- data.frame(x = -1:1, y = 3:1, z = c(\"a\", \"b\", NA))\ndata\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\nclass(data)\n\n[1] \"data.frame\"\n\n## Variable access\ndata$x\n\n[1] -1  0  1\n\ndata$x + data$y\n\n[1] 2 2 2\n\nrow_summaries &lt;- with(data, \n  data.frame(\n    rsum = x + y,\n    rdiff = x - y\n  ))\nrow_summaries\n\n  rsum rdiff\n1    2    -4\n2    2    -2\n3    2     0"
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-frames-overview",
    "href": "01-introduction_to_r.html#rectangular-data-frames-overview",
    "title": "Introduction to R",
    "section": "Rectangular data frames: overview",
    "text": "Rectangular data frames: overview\n\nstr(data)\n\n'data.frame':   3 obs. of  3 variables:\n $ x: int  -1 0 1\n $ y: int  3 2 1\n $ z: chr  \"a\" \"b\" NA\n\nsummary(data)\n\n       x              y            z            \n Min.   :-1.0   Min.   :1.0   Length:3          \n 1st Qu.:-0.5   1st Qu.:1.5   Class :character  \n Median : 0.0   Median :2.0   Mode  :character  \n Mean   : 0.0   Mean   :2.0                     \n 3rd Qu.: 0.5   3rd Qu.:2.5                     \n Max.   : 1.0   Max.   :3.0                     \n\nhead(data)\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-frames-indexing",
    "href": "01-introduction_to_r.html#rectangular-data-frames-indexing",
    "title": "Introduction to R",
    "section": "Rectangular data frames: Indexing",
    "text": "Rectangular data frames: Indexing\n\n## 2D structure of data\n## Empty argument means \"all\"#| \ndata[, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1:3, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1, ]\n\n   x y z\n1 -1 3 a\n\ndata[c(1, 3), c(\"x\", \"z\")]\n\n   x    z\n1 -1    a\n3  1 &lt;NA&gt;\n\ndata[data$x &lt; 3,]\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-adding-and-removing-variables",
    "href": "01-introduction_to_r.html#rectangular-data-adding-and-removing-variables",
    "title": "Introduction to R",
    "section": "Rectangular data: adding and removing variables",
    "text": "Rectangular data: adding and removing variables\n\n## new data has to have the same number of elements\ndata$a &lt;- 2 * data$x\ndata\n\n   x y    z  a\n1 -1 3    a -2\n2  0 2    b  0\n3  1 1 &lt;NA&gt;  2\n\ndata$b &lt;- c(\"one\", \"two\", \"three\")\ndata\n\n   x y    z  a     b\n1 -1 3    a -2   one\n2  0 2    b  0   two\n3  1 1 &lt;NA&gt;  2 three\n\ndata$x &lt;- NULL\ndata\n\n  y    z  a     b\n1 3    a -2   one\n2 2    b  0   two\n3 1 &lt;NA&gt;  2 three\n\ndata$a &lt;- log(data$a)\ndata\n\n  y    z         a     b\n1 3    a       NaN   one\n2 2    b      -Inf   two\n3 1 &lt;NA&gt; 0.6931472 three\n\ndata$b[data$b == \"two\"] &lt;- \"TWO!\"\ndata$z[is.na(data$z)] &lt;- \"c\"\ndata$a[is.nan(data$a)] &lt;- 0\ndata\n\n  y z         a     b\n1 3 a 0.0000000   one\n2 2 b      -Inf  TWO!\n3 1 c 0.6931472 three"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise-1",
    "href": "01-introduction_to_r.html#exercise-1",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nGenerate your own data\n\n\n\nLook at the helpfiles of rnorm, runif, and ifelse\n\nCreate a data.frame with 10 rows and variables x, generated using runif and y, generated using rnorm\n\nAdd variable z which takes the value 1 if x is larger than y and 0 otherwise\nCreate a second data.frame that holds the rows of the original one for which z == 1 is TRUE.\nRemove column z from the second data.frame\n\nWhat happens if you try to create a data.frame when x and y have a differnent number of elements?\nWhat happens if you run the code you wrote for this exercise again (and again)?\nHow can you ensure that each run yields the same results?"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data",
    "href": "01-introduction_to_r.html#reading-data",
    "title": "Introduction to R",
    "section": "Reading data",
    "text": "Reading data\n\nPlease download & unzip the folder found in “data” in Canvas\nWe will first use the “penguins” folder which includes the penguins_raw data set in multiple file formats\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\"data/penguins/penguins_raw.csv\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1     studyName `Sample Number` Species Region Island Stage `Individual ID`\n  &lt;chr&gt;    &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 # this … &lt;NA&gt;                   NA &lt;NA&gt;    &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;           \n2 1        PAL0708                 1 Adelie… Anvers Torge… Adul… N1A1           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n  ...1                                              \n  &lt;chr&gt;                                             \n1 # this is a comment making the data harder to read\n\n\n\n\n\nFix the data\n\n\n\nThe second row (after the column names) in the penguins_raw.csv file is a comment\nLook at the help file for the readr::read_csv function (?readr::read_csv)\nHow can we ignore the comment row?"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data-solution",
    "href": "01-introduction_to_r.html#reading-data-solution",
    "title": "Introduction to R",
    "section": "Reading data: solution",
    "text": "Reading data: solution\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\n  \"data/penguins/penguins_raw.csv\",\n  comment = \"#\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n   ...1 studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1     1 PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2     2 PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n   ...1\n  &lt;dbl&gt;\n1     1\n\nstr(penguins_raw)\n\nspc_tbl_ [344 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1               : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data-other-file-formats",
    "href": "01-introduction_to_r.html#reading-data-other-file-formats",
    "title": "Introduction to R",
    "section": "Reading data: other file formats",
    "text": "Reading data: other file formats\n\nThe readxl package provides functions for reading Excel files\n\n\npenguins_raw &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1  studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 1     PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2 2     PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n## Read a subset \npenguins_subset &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\", sheet = \"Sheet1\", range = \"B1:O345\")\nhead(penguins_subset, 2)\n\n# A tibble: 2 × 14\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 7 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data-other-file-formats-1",
    "href": "01-introduction_to_r.html#reading-data-other-file-formats-1",
    "title": "Introduction to R",
    "section": "Reading data: other file formats",
    "text": "Reading data: other file formats\n\nThe haven package provides functions for reading SPSS, Stata, and SAS files\nIt looks like SPSS does not support spaces in column names so this is slightly different\n\n\npenguins_raw &lt;- haven::read_sav(\"data/penguins/penguins_raw.sav\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-big-data-the-arrow-package",
    "href": "01-introduction_to_r.html#reading-big-data-the-arrow-package",
    "title": "Introduction to R",
    "section": "Reading big data: the arrow package",
    "text": "Reading big data: the arrow package\n\nThe arrow package provides functions for reading Parquet and Feather files\nOptimized formats used in many data science projects\nProvides facility to read from “object storage” (e.g., Amazon S3)\n\n\nThe major benefits of object storage are the virtually unlimited scalability and the lower cost of storing large volumes of data for use cases such as data lakes, cloud native applications, analytics, log files, and machine learning (ML). 1\n\n\nRule of thumb:\n\nuse parquet for large files and long term storage\n\noptimized file size\n\n\nuse feather for optimized reading and short term storage\n\nmemory layout the same as in the process\n\n\n\n\nhttps://aws.amazon.com/what-is/object-storage/"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-big-data-the-arrow-package-1",
    "href": "01-introduction_to_r.html#reading-big-data-the-arrow-package-1",
    "title": "Introduction to R",
    "section": "Reading big data: the arrow package",
    "text": "Reading big data: the arrow package\n\npenguins_raw &lt;- arrow::read_parquet(\"data/penguins/penguins_raw.parquet\")\npenguins_raw &lt;- arrow::read_feather(\"data/penguins/penguins_raw.feather\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\nSupport for complex data structures\n\n\npenguin_species_island &lt;- arrow::read_parquet('data/penguins/penguin_species_nested.parquet')\nhead(penguin_species_island, 2)\n\n# A tibble: 2 × 2\n  Island                                 data\n  &lt;chr&gt;     &lt;list&lt;tbl_df&lt;Species:character&gt;&gt;&gt;\n1 Torgersen                          [52 × 1]\n2 Biscoe                            [168 × 1]\n\nhead(tidyr::unnest(penguin_species_island), 2)\n\n# A tibble: 2 × 2\n  Island    Species                            \n  &lt;chr&gt;     &lt;chr&gt;                              \n1 Torgersen Adelie Penguin (Pygoscelis adeliae)\n2 Torgersen Adelie Penguin (Pygoscelis adeliae)"
  },
  {
    "objectID": "01-introduction_to_r.html#benchmarks",
    "href": "01-introduction_to_r.html#benchmarks",
    "title": "Introduction to R",
    "section": "Benchmarks",
    "text": "Benchmarks\n\nlibrary(microbenchmark)\nmicrobenchmark(\n  csv = readr::read_csv(\"data/penguins/penguins_raw.csv\", \n   show_col_types = FALSE, name_repair = 'minimal'),\n  parquet = arrow::read_parquet(\"data/penguins/penguins_raw.parquet\"),\n  feather = arrow::read_feather(\"data/penguins/penguins_raw.feather\")\n) \n\nUnit: milliseconds\n    expr      min       lq     mean   median       uq       max neval cld\n     csv 7.774953 8.164555 8.585466 8.349117 8.586773 11.624443   100 a  \n parquet 1.783049 1.985671 2.090328 2.074333 2.151618  4.407172   100  b \n feather 1.347547 1.463064 1.639503 1.536208 1.606196  4.417750   100   c"
  },
  {
    "objectID": "01-introduction_to_r.html#data-types",
    "href": "01-introduction_to_r.html#data-types",
    "title": "Introduction to R",
    "section": "Data types",
    "text": "Data types\nThe most important types of data are:\n\n\n\n\n\n\nData type\nDescription\n\n\n\nNumeric\nApproximations of the real numbers, \\(\\normalsize\\mathbb{R}\\) (e.g., mileage a car gets: 23.6, 20.9, etc.)\n\n\nInteger\nWhole numbers, \\(\\normalsize\\mathbb{Z}\\) (e.g., number of sales: 7, 0, 120, 63, etc.)\n\n\nCharacter\nText data (strings, e.g., product names)\n\n\nFactor\nCategorical data for classification (e.g., product groups)\n\n\nLogical\nTRUE, FALSE\n\n\nDate\nDate variables (e.g., sales dates: 21-06-2015, 06-21-15, 21-Jun-2015, etc.)\n\n\n\nVariables can be converted from one type to another using the appropriate functions (e.g., as.numeric(), as.integer(), as.character(), as.factor(), as.logical(), as.Date())."
  },
  {
    "objectID": "01-introduction_to_r.html#lets-clean-up-the-penguins",
    "href": "01-introduction_to_r.html#lets-clean-up-the-penguins",
    "title": "Introduction to R",
    "section": "Let’s clean up the penguins!",
    "text": "Let’s clean up the penguins!\n\nstr(penguins_raw)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nClean the column names\n\n\npenguins &lt;- janitor::clean_names(penguins_raw)\nstr(penguins)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ region           : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ stage            : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "01-introduction_to_r.html#data-preprocessing-syntax",
    "href": "01-introduction_to_r.html#data-preprocessing-syntax",
    "title": "Introduction to R",
    "section": "Data-preprocessing: syntax",
    "text": "Data-preprocessing: syntax\n\n\n|&gt; is the “pipe” operator\n\nIt takes the result of the left side and passes it to the right side as the first argument\nVery useful when “chaining” multiple operations\n\n\n\n\npenguins |&gt;\n  head(2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\nhead(penguins, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#data-preprocessing-mutation",
    "href": "01-introduction_to_r.html#data-preprocessing-mutation",
    "title": "Introduction to R",
    "section": "Data preprocessing: mutation",
    "text": "Data preprocessing: mutation\n\nPkg: dplyr provides function for data.frame manipulation\nPkg: stringr provides functions to manipulate strings (characters)\nfn: mutate takes each row and applies a function to create a new (or overwrite a) column\n\nfn: select selects columns\n\n\nlibrary(dplyr)\nlibrary(stringr)\npenguins_subset &lt;- penguins |&gt;\n  mutate(\n    species = str_split(species, \" \", n = 2, simplify = TRUE)[,1],\n    is_adult = str_detect(str_to_lower(stage), \"adult\"),\n    is_female = str_detect(str_to_lower(sex), \"female\"),\n    sex = str_to_lower(sex)) |&gt;\n  select(species, island, sex, is_adult,  culmen_length_mm, culmen_depth_mm, is_female)\npenguins_subset |&gt; head(2)\n\n# A tibble: 2 × 7\n  species island    sex    is_adult culmen_length_mm culmen_depth_mm is_female\n  &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;               &lt;dbl&gt;           &lt;dbl&gt; &lt;lgl&gt;    \n1 Adelie  Torgersen male   TRUE                 39.1            18.7 FALSE    \n2 Adelie  Torgersen female TRUE                 39.5            17.4 TRUE"
  },
  {
    "objectID": "01-introduction_to_r.html#data-preprocessing-multiple-columns",
    "href": "01-introduction_to_r.html#data-preprocessing-multiple-columns",
    "title": "Introduction to R",
    "section": "Data preprocessing: multiple columns",
    "text": "Data preprocessing: multiple columns\n\n#penguins_subset &lt;- \npenguins_subset &lt;- penguins_subset |&gt;\n  mutate(\n    across(starts_with('culmen'), \\(x) x / 10),\n    across(species:sex, as.factor),\n    across(c('is_adult', 'is_female'), as.numeric)\n    ) |&gt;\n  mutate_if(is.numeric,\n    list(scaled = \\(x) (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE))\n  ) |&gt;\n  rename_with(\n    \\(name) str_replace(name, \"mm\", \"cm\"),\n    starts_with('culmen'))\npenguins_subset |&gt; select(-starts_with('is')) |&gt; str()\n\ntibble [344 × 6] (S3: tbl_df/tbl/data.frame)\n $ species                : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ culmen_length_cm       : num [1:344] 3.91 3.95 4.03 NA 3.67 3.93 3.89 3.92 3.41 4.2 ...\n $ culmen_depth_cm        : num [1:344] 1.87 1.74 1.8 NA 1.93 2.06 1.78 1.96 1.81 2.02 ...\n $ culmen_length_cm_scaled: num [1:344] -0.883 -0.81 -0.663 NA -1.323 ...\n $ culmen_depth_cm_scaled : num [1:344] 0.784 0.126 0.43 NA 1.088 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "01-introduction_to_r.html#hint-figuring-out-what-is-going-on",
    "href": "01-introduction_to_r.html#hint-figuring-out-what-is-going-on",
    "title": "Introduction to R",
    "section": "Hint: figuring out what is going on",
    "text": "Hint: figuring out what is going on\n\nSplit the problem into smaller pieces\n\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\nstr_replace(\"ammm\", \"mm\", \"cm\")\n\n[1] \"acmm\"\n\n\n\nCheck help files\n\n\n?str_replace\n\n\nCheck typeof() and class()\n\n\n\ntypeof(\\(name) str_replace(name, \"mm\", \"cm\"))\n\n[1] \"closure\"\n\n\n\\(\\rightarrow\\) closures are functions\n\nSee if you can produce some outcome on the reduced problem\n\n\nmy_function &lt;- \\(name) str_replace(name, \"mm\", \"cm\")\nmy_function('here are some mms')\n\n[1] \"here are some cms\""
  },
  {
    "objectID": "01-introduction_to_r.html#hint-read-the-source-code",
    "href": "01-introduction_to_r.html#hint-read-the-source-code",
    "title": "Introduction to R",
    "section": "Hint: read the source code",
    "text": "Hint: read the source code\n\nThis is only useful if a function is pure R code\n\n\nstr_replace\n\nfunction (string, pattern, replacement) \n{\n    if (!missing(replacement) && is_replacement_fun(replacement)) {\n        replacement &lt;- as_function(replacement)\n        return(str_transform(string, pattern, replacement))\n    }\n    check_lengths(string, pattern, replacement)\n    switch(type(pattern), empty = no_empty(), bound = no_boundary(), \n        fixed = stri_replace_first_fixed(string, pattern, replacement, \n            opts_fixed = opts(pattern)), coll = stri_replace_first_coll(string, \n            pattern, replacement, opts_collator = opts(pattern)), \n        regex = stri_replace_first_regex(string, pattern, fix_replacement(replacement), \n            opts_regex = opts(pattern)))\n}\n&lt;bytecode: 0x13ecd6890&gt;\n&lt;environment: namespace:stringr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#aside-functions-and-variable-names",
    "href": "01-introduction_to_r.html#aside-functions-and-variable-names",
    "title": "Introduction to R",
    "section": "Aside: functions and variable names",
    "text": "Aside: functions and variable names\n\nCommon mistake that leads to cryptic error:\n\n\nmeans &lt;- c(4,5,6)\nmean[1]\n\nError in mean[1]: object of type 'closure' is not subsettable"
  },
  {
    "objectID": "01-introduction_to_r.html#reducing-rows-filtering",
    "href": "01-introduction_to_r.html#reducing-rows-filtering",
    "title": "Introduction to R",
    "section": "Reducing rows: filtering",
    "text": "Reducing rows: filtering\n\nCreate different subsets of data\n“Filter in” (not out) \\(\\rightarrow\\) TRUE rows remain\n\n\nadelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\")\nunique(adelies$species)\n\n[1] Adelie\nLevels: Adelie Chinstrap Gentoo\n\nfemale_adelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\", is_female == 1)\nfemale_adelies |&gt; select(species, sex) |&gt; summary()\n\n      species       sex    \n Adelie   :73   female:73  \n Chinstrap: 0   male  : 0  \n Gentoo   : 0"
  },
  {
    "objectID": "01-introduction_to_r.html#reducing-rows-summarizing",
    "href": "01-introduction_to_r.html#reducing-rows-summarizing",
    "title": "Introduction to R",
    "section": "Reducing rows: summarizing",
    "text": "Reducing rows: summarizing\n\nCalculate any appropriate summary for a variable\n\n\nlibrary(tidyr)\npenguins |&gt;\n  drop_na(body_mass_g) |&gt;\n  summarize(avg_weight = mean(body_mass_g))\n\n# A tibble: 1 × 1\n  avg_weight\n       &lt;dbl&gt;\n1      4202.\n\n\n\nCalculate the summary for each group\n\n\npenguins_summary &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  group_by(species, sex) |&gt;\n  summarize(avg_clength = mean(culmen_length_cm))\npenguins_summary\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex    avg_clength\n  &lt;fct&gt;     &lt;fct&gt;        &lt;dbl&gt;\n1 Adelie    female        3.73\n2 Adelie    male          4.04\n3 Adelie    &lt;NA&gt;          3.78\n4 Chinstrap female        4.66\n5 Chinstrap male          5.11\n6 Gentoo    female        4.56\n7 Gentoo    male          4.95\n8 Gentoo    &lt;NA&gt;          4.56"
  },
  {
    "objectID": "01-introduction_to_r.html#pivot-tables",
    "href": "01-introduction_to_r.html#pivot-tables",
    "title": "Introduction to R",
    "section": "Pivot tables",
    "text": "Pivot tables\n\npenguins_summary |&gt;\n  pivot_wider(names_from = species, values_from = avg_clength) \n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npenguins_wide &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  select(culmen_length_cm, species, sex) |&gt;\n  pivot_wider(values_from = culmen_length_cm, names_from = species, values_fn = mean) |&gt;\n  arrange(sex) |&gt;\n  select(sex, Adelie, Chinstrap, Gentoo)\npenguins_wide\n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npivot_longer(penguins_wide, cols = -sex, names_to = \"species\", values_to = \"avg_clength\")\n\n# A tibble: 9 × 3\n  sex    species   avg_clength\n  &lt;fct&gt;  &lt;chr&gt;           &lt;dbl&gt;\n1 female Adelie           3.73\n2 female Chinstrap        4.66\n3 female Gentoo           4.56\n4 male   Adelie           4.04\n5 male   Chinstrap        5.11\n6 male   Gentoo           4.95\n7 &lt;NA&gt;   Adelie           3.78\n8 &lt;NA&gt;   Chinstrap       NA   \n9 &lt;NA&gt;   Gentoo           4.56"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise-2",
    "href": "01-introduction_to_r.html#exercise-2",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nBecome the Ornithologist\n\n\n\nRead the penguins_raw.feather file\nRemove all whitespace and special characters from the column names\nCalculate the body mass for each penguin in kg\nCreate a pivot-table with the median (?median) body mass for each species on each island\n\nthe island names should be in the first column\nthe species names should be the remaining columns\n\n\nRepeat the analysis but only for female penguins\n\n\n\n\n\n\n\nBecome the music manager\n\n\n\nRead the top10_charts.csv in chart_data\n\nWhat is the range of dates in this dataset? (Hint: ?min, ?max)\nWhat is the top region in terms of streams overall? (Hint: ?slice_max)\nCreate a pivot-table of the total streams (in this dataset) within a region on a given day (1st column day, remaining columns region names, values total streams)"
  },
  {
    "objectID": "01-introduction_to_r.html#merging-data-i",
    "href": "01-introduction_to_r.html#merging-data-i",
    "title": "Introduction to R",
    "section": "Merging data I",
    "text": "Merging data I\n\nOften we have two separate datasets with corresponding groups of rows\n\nStreams, trackID in top10_charts.csv and Song metadata, trackID in top10_meta.csv\n\npurchaseid, customerid in noahs-orders.csv and productid, purchaseid in noahs-orders_items.csv and customerid, customer metadata in noahs-customers.csv\n\n\n\nCombine data using joins\n\n\ncharts &lt;- readr::read_csv(\"data/chart_data/top10_charts.csv\")\nsongs &lt;- readr::read_csv(\"data/chart_data/top10_meta.csv\")\nstr(charts, give.attr=FALSE)\n\nspc_tbl_ [7,320 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID  : chr [1:7320] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" ...\n $ rank     : num [1:7320] 7 6 7 7 7 8 9 9 10 10 ...\n $ streams  : num [1:7320] 26234 4276985 3688979 3255639 3478044 ...\n $ day      : Date[1:7320], format: \"2020-08-14\" \"2020-03-27\" ...\n $ dayNumber: num [1:7320] 1318 1178 1179 1180 1181 ...\n $ region   : chr [1:7320] \"at\" \"global\" \"global\" \"global\" ...\n $ isrc     : chr [1:7320] \"DEUM72004523\" \"GBAHT1901303\" \"GBAHT1901303\" \"GBAHT1901303\" ...\n\nstr(songs, give.attr=FALSE)\n\nspc_tbl_ [347 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID              : chr [1:347] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"01I9AEz658sQnQzCL3K3QG\" \"033if6Adj8fwBYsQzHOfQ8\" ...\n $ trackName            : chr [1:347] \"Fall Auf\" \"Break My Heart\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ artistName           : chr [1:347] \"Cro feat. badchieff\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra feat. Samra\" ...\n $ artistIds            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ isrc                 : chr [1:347] \"DEUM72004523\" \"GBAHT1901303\" \"DECE72000379\" \"DECE72000176\" ...\n $ explicit             : num [1:347] 0 0 1 0 0 0 0 1 0 0 ...\n $ trackPopularity      : num [1:347] 64 83 75 71 69 82 70 74 89 79 ...\n $ primary_artistName   : chr [1:347] \"Cro\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra\" ...\n $ primary_artistID     : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d\" ...\n $ artistIDs            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ albumName            : chr [1:347] \"Fall Auf\" \"Future Nostalgia\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ albumID              : chr [1:347] \"1qdHQo41Vkkgs8HtMk5b96\" \"7fJJK56U9fHixgO0HQkhtI\" \"15Njx2PcwnNsI65fnbM7Pw\" \"5cqwoGrjFr3VKYZ9ZC0eL2\" ...\n $ available_markets    : chr [1:347] \"AD, AE, AL, AR, AT, AU, BA, BE, BG, BH, BO, BR, BY, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES,\"| __truncated__ \"AD, AE, AR, AU, BE, BG, BH, BO, BR, CA, CL, CO, CR, CY, CZ, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB, GR, GT, HK,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ ...\n $ n_available_markets  : num [1:347] 92 76 79 79 87 79 3 79 92 92 ...\n $ releaseDate          : Date[1:347], format: \"2020-08-13\" \"2020-03-27\" ...\n $ releaseDate_precision: chr [1:347] \"day\" \"day\" \"day\" \"day\" ...\n $ danceability         : num [1:347] 0.5 0.73 0.73 0.701 0.84 0.795 0.814 0.774 0.641 0.571 ...\n $ energy               : num [1:347] 0.743 0.729 0.777 0.714 0.648 0.607 0.794 0.805 0.324 0.693 ...\n $ key                  : num [1:347] 2 4 1 10 10 7 7 11 11 6 ...\n $ loudness             : num [1:347] -6.65 -3.43 -6.38 -5.91 -5.54 ...\n $ mode                 : num [1:347] 1 0 0 1 0 1 1 0 1 0 ...\n $ speechiness          : num [1:347] 0.0373 0.0886 0.29 0.524 0.0489 0.23 0.0887 0.302 0.0299 0.0545 ...\n $ acousticness         : num [1:347] 0.307 0.167 0.0455 0.289 0.101 0.128 0.119 0.0509 0.698 0.0054 ...\n $ instrumentalness     : num [1:347] 0.00 1.39e-06 1.10e-03 0.00 1.00e-04 1.90e-01 9.00e-04 0.00 0.00 0.00 ...\n $ liveness             : num [1:347] 0.133 0.349 0.0759 0.0883 0.0996 0.111 0.348 0.149 0.328 0.173 ...\n $ valence              : num [1:347] 0.332 0.467 0.578 0.604 0.431 0.25 0.647 0.261 0.273 0.393 ...\n $ tempo                : num [1:347] 166.3 113 177.9 86.9 103 ...\n $ duration_ms          : num [1:347] 191827 221820 130307 173353 124690 ...\n $ time_signature       : num [1:347] 4 4 4 4 4 4 4 4 4 4 ..."
  },
  {
    "objectID": "01-introduction_to_r.html#merging-data-ii",
    "href": "01-introduction_to_r.html#merging-data-ii",
    "title": "Introduction to R",
    "section": "Merging data II",
    "text": "Merging data II\n\nThe name of the join determines which “ids” are kept\n\nleft_join keeps all rows that have an id in the left dataset\n\ninner_join only keeps rows with ids in both datasets\n\n\ndata1 &lt;- data.frame(group = c('a', 'a', 'b','c'), value = c(1,2,3,4)) # missing group 'd'\ndata2 &lt;- data.frame(group2 = c('a', 'c', 'd'), value2 = factor(c(\"abc\", \"def\", \"ghi\"))) # missing group 'b'\n\nleft_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n\nright_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n4     d    NA    ghi\n\ninner_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def"
  },
  {
    "objectID": "01-introduction_to_r.html#special-joins",
    "href": "01-introduction_to_r.html#special-joins",
    "title": "Introduction to R",
    "section": "Special joins",
    "text": "Special joins\n\n\nfull_join returns all rows from both datasets\n\nsemi_join returns only the columns of the left dataset and filters rows with id in the right dataset\n\nanti_join keeps only rows that do not have an id in the right table\n\n\nfull_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n5     d    NA    ghi\n\nsemi_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nfilter(data1, group %in% data2$group2)\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nanti_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     b     3"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise-3",
    "href": "01-introduction_to_r.html#exercise-3",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nBE the music manager\n\n\n\nWho are the top 10 artists in terms of total global streams?\nWhat is their most succesful song?\nFor how many songs are do we not have meta data?\nHow many songs are there in the data? (Hint: ?n_distinct, or ?length, ?unique)\nSave the combined data as top10_all.parquet"
  },
  {
    "objectID": "01-introduction_to_r.html#references",
    "href": "01-introduction_to_r.html#references",
    "title": "Introduction to R",
    "section": "References",
    "text": "References\nLinks\n\nR Logo\nNoah’s Database\n\nBibliography\n\n\nHorst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data. https://doi.org/10.5281/zenodo.3960218.\n\n\n\n\n\n\nData Literacy"
  },
  {
    "objectID": "00-introduction_to_r-page.html",
    "href": "00-introduction_to_r-page.html",
    "title": "Introduction to R",
    "section": "",
    "text": "Well established in business and scientific computing\nVery powerful language\n\nExpress any operation in terms of\nOften complex functions are already implemented\n\nVery good package manager and ecosystem\n\nWe will use many tools created by companies, universities, and other R community members\n\nVery good for reproducibility\n\nCode documents the process\nShould run the same on my and your machine\nShould be easily adaptable to changing data\n\nOpen source\n\nAll packages can be inspected\nFree to install and use on any computer\n\nDeveloped (partly) and hosted at WU 😋\n\n\n\n\n\n\n\n\nThe R interpreter\n\nThe program that “interprets” R code and runs it\nVery bare-bones, essentially just a text field\nDoes not store code files for reproducibility\n\n\n\nprint(\"Hello, WU!\")\n\n[1] \"Hello, WU!\"\n\npaste0(\"One plus two is: \", 1 + 2)\n\n[1] \"One plus two is: 3\"\n\nc &lt;- data.frame(p = seq(0, 2 * pi, by = 0.001))\nc$h_x &lt;- 16 * sin(c$p)^3\nc$h_y &lt;- 13 * cos(c$p) - 5 * cos(2 * c$p) - 2 * cos(3 * c$p) - cos(4 * c$p)\nplot(c$h_x, c$h_y, type = \"l\", main = \"I &lt;3 R\", frame = F, xlab = NA, ylab = NA)\n\n\n\n\n\n\n\n\n\n\nAn Integrated Development Environment (IDE)\n\nMakes writing and storing R code easier (more fun!)\nThree options compatible with this course:\n\nR Studio Desktop (Recommended)\n\nFocused on R\nEasiest option\n\nVS Code\n\nRecommended if you (plan to) use other languages (Python, C++, Julia, etc.)\nNeeds extension for R but works well\n\nJupyterLab\n\n“Notebooks” for R, Python, and Julia\nOutput generated directly under code “cells”\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy favorite R package\n\n\n\n\nDownload the presentation template my_favorite_r_package.qmd and the bibliography file data_literacy.bib from Canvas\nSelect a package that was useful to you in the past\nPrepare a short presentation about the package\n\nInclude examples of how to use the package\nShow in which situations that is useful\n\n\n\n\n\n\n\n\nCtrl + Enter to run current line of code (any cursor position)\n\n\n\n\n\n\nCtrl + Enter to run current line of code (any cursor position)\n\n\n\n\n\n\n# This is a comment\nprint(\"Hi\") # also a comment\n\n[1] \"Hi\"\n\n## Assignment of varibale names\nx &lt;- 1\nx\n\n[1] 1\n\n## Missing values\nNA\n\n[1] NA\n\n## Vectors\ny &lt;- c(1, 2, 3, NA)\ny\n\n[1]  1  2  3 NA\n\n\n\n\n\n\n## built-in\nsum(y)\n\n[1] NA\n\nsum(y, na.rm = FALSE)\n\n[1] NA\n\nsum(y, na.rm = TRUE)\n\n[1] 6\n\n## User functions\na_plus_b &lt;- function(a, b = 1) {\n    return(a + b)\n}\na_plus_b(y)\n\n[1]  2  3  4 NA\n\na_plus_b(y, 2)\n\n[1]  3  4  5 NA\n\na_plus_b(b = 2, a = y)\n\n[1]  3  4  5 NA\n\n## Functions provided by packages\n## Installation\n#install.packages(\"ineq\")\nineq::Gini(y)\n\n[1] 0.2222222\n\n## or\nlibrary(ineq)\nGini(y)\n\n[1] 0.2222222\n\n## Help \n?Gini\n\n\n\n\n\ny[1]\n\n[1] 1\n\ny[-1]\n\n[1]  2  3 NA\n\ny[2:3]\n\n[1] 2 3\n\ny[c(1, 3, 4)]\n\n[1]  1  3 NA\n\nset.seed(1)\nx &lt;- y / 2 + rnorm(length(y))\ncbind(y, x)\n\n      y          x\n[1,]  1 -0.1264538\n[2,]  2  1.1836433\n[3,]  3  0.6643714\n[4,] NA         NA\n\ny &gt; 2\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 & x &gt; 0\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 | x &gt; 0\n\n[1] FALSE  TRUE  TRUE    NA\n\ny[y &gt; 2 | x &gt; 0]\n\n[1]  2  3 NA\n\n\n\n\n\n\n## 'elem' is a temporary variable\nfor (elem in y) {\n    print(paste(\"Current y value is:\", elem))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## 'seq_along' returns a vector which indexes the argument\nfor (i in seq_along(y)) {\n    print(paste(\"Current y value is:\", y[i]))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## set.seed guarantees the same random numbers every time\nset.seed(1)\ntotal &lt;- 0\nwhile (total &lt; 1) {\n    ## runif generates random numbers between 0 and 1\n    total &lt;- total + runif(1)\n    print(paste(\"Current total value is:\", total))\n}\n\n[1] \"Current total value is: 0.2655086631421\"\n[1] \"Current total value is: 0.63763256277889\"\n[1] \"Current total value is: 1.21048592613079\"\n\n## ranges\n1:3\n\n[1] 1 2 3\n\n10:3\n\n[1] 10  9  8  7  6  5  4  3\n\nseq(3, 11, by = 2)\n\n[1]  3  5  7  9 11\n\n\n\n\n\n\nz &lt;- -2:3\nfor (x in z) {\n  print(paste(\"x =\", x))\n    if (x &gt; 0) {\n        print(\"x is positive\")\n    } else if (x &gt; 2) {\n        print(\"x is greater than 2\")\n    } else if (x &lt; 0) {\n        print(\"x is negative\")\n    } else if (x == 0) {\n        print(\"x is zero\")\n    }\n}\n\n[1] \"x = -2\"\n[1] \"x is negative\"\n[1] \"x = -1\"\n[1] \"x is negative\"\n[1] \"x = 0\"\n[1] \"x is zero\"\n[1] \"x = 1\"\n[1] \"x is positive\"\n[1] \"x = 2\"\n[1] \"x is positive\"\n[1] \"x = 3\"\n[1] \"x is positive\"\n\nz[z &lt;= 0]\n\n[1] -2 -1  0\n\nz[z &gt;= 0]\n\n[1] 0 1 2 3\n\nz[z != 0]\n\n[1] -2 -1  1  2  3\n\nz[! z &lt; 0]\n\n[1] 0 1 2 3\n\n\n\n\n\n\n\n\n\n\n\nWrite your own function\n\n\n\n\nThe function should take two arguments a and b\nFirst, check if a and b have the same number of elements (see ?length)\n\nIf they have a different number of elements, return NA\n\nIterate over the elements of a and b and check which vector’s element is larger (or if they are equal)\nIf they are equal print the index of the element and “equal”\nIf the element in a is larger print the index of the elemnt and “a larger”\nIf the element in b is larger print the index of the elemnt and “b larger”\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(1, 2, 3, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 1 2 3 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nNA\n\n[1] NA\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(0, 2, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 0 2 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nprint(\"1 a larger\")\n\n[1] \"1 a larger\"\n\nprint(\"2 equal\")\n\n[1] \"2 equal\"\n\nprint(\"3 b larger\")\n\n[1] \"3 b larger\"\n\n\n\n\n\n\n\ndata &lt;- data.frame(x = -1:1, y = 3:1, z = c(\"a\", \"b\", NA))\ndata\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\nclass(data)\n\n[1] \"data.frame\"\n\n## Variable access\ndata$x\n\n[1] -1  0  1\n\ndata$x + data$y\n\n[1] 2 2 2\n\nrow_summaries &lt;- with(data, \n  data.frame(\n    rsum = x + y,\n    rdiff = x - y\n  ))\nrow_summaries\n\n  rsum rdiff\n1    2    -4\n2    2    -2\n3    2     0\n\n\n\n\n\n\nstr(data)\n\n'data.frame':   3 obs. of  3 variables:\n $ x: int  -1 0 1\n $ y: int  3 2 1\n $ z: chr  \"a\" \"b\" NA\n\nsummary(data)\n\n       x              y            z            \n Min.   :-1.0   Min.   :1.0   Length:3          \n 1st Qu.:-0.5   1st Qu.:1.5   Class :character  \n Median : 0.0   Median :2.0   Mode  :character  \n Mean   : 0.0   Mean   :2.0                     \n 3rd Qu.: 0.5   3rd Qu.:2.5                     \n Max.   : 1.0   Max.   :3.0                     \n\nhead(data)\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\n\n\n\n\n\n## 2D structure of data\n## Empty argument means \"all\"#| \ndata[, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1:3, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1, ]\n\n   x y z\n1 -1 3 a\n\ndata[c(1, 3), c(\"x\", \"z\")]\n\n   x    z\n1 -1    a\n3  1 &lt;NA&gt;\n\ndata[data$x &lt; 3,]\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\n\n\n\n\n\n## new data has to have the same number of elements\ndata$a &lt;- 2 * data$x\ndata\n\n   x y    z  a\n1 -1 3    a -2\n2  0 2    b  0\n3  1 1 &lt;NA&gt;  2\n\ndata$b &lt;- c(\"one\", \"two\", \"three\")\ndata\n\n   x y    z  a     b\n1 -1 3    a -2   one\n2  0 2    b  0   two\n3  1 1 &lt;NA&gt;  2 three\n\ndata$x &lt;- NULL\ndata\n\n  y    z  a     b\n1 3    a -2   one\n2 2    b  0   two\n3 1 &lt;NA&gt;  2 three\n\ndata$a &lt;- log(data$a)\n\nWarning in log(data$a): NaNs produced\n\ndata\n\n  y    z         a     b\n1 3    a       NaN   one\n2 2    b      -Inf   two\n3 1 &lt;NA&gt; 0.6931472 three\n\ndata$b[data$b == \"two\"] &lt;- \"TWO!\"\ndata$z[is.na(data$z)] &lt;- \"c\"\ndata$a[is.nan(data$a)] &lt;- 0\ndata\n\n  y z         a     b\n1 3 a 0.0000000   one\n2 2 b      -Inf  TWO!\n3 1 c 0.6931472 three\n\n\n\n\n\n\n\n\n\n\n\nGenerate your own data\n\n\n\n\nLook at the helpfiles of rnorm, runif, and ifelse\nCreate a data.frame with 10 rows and variables x, generated using runif and y, generated using rnorm\nAdd variable z which takes the value 1 if x is larger than y and 0 otherwise\nCreate a second data.frame that holds the rows of the original one for which z == 1 is TRUE.\nRemove column z from the second data.frame\nWhat happens if you try to create a data.frame when x and y have a differnent number of elements?\nWhat happens if you run the code you wrote for this exercise again (and again)?\nHow can you ensure that each run yields the same results?\n\n\n\n\n\n\n\nPlease download & unzip the folder found in “data” in Canvas\nWe will first use the “penguins” folder which includes the penguins_raw data set in multiple file formats\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\"data/penguins/penguins_raw.csv\")\n\nNew names:\n• `` -&gt; `...1`\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 345 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): ...1, studyName, Species, Region, Island, Stage, Individual ID, C...\ndbl   (7): Sample Number, Culmen Length (mm), Culmen Depth (mm), Flipper Len...\ndate  (1): Date Egg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1     studyName `Sample Number` Species Region Island Stage `Individual ID`\n  &lt;chr&gt;    &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 # this … &lt;NA&gt;                   NA &lt;NA&gt;    &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;           \n2 1        PAL0708                 1 Adelie… Anvers Torge… Adul… N1A1           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n. . .\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n  ...1                                              \n  &lt;chr&gt;                                             \n1 # this is a comment making the data harder to read\n\n\n\n\n\n\n\n\nFix the data\n\n\n\n\nThe second row (after the column names) in the penguins_raw.csv file is a comment\nLook at the help file for the readr::read_csv function (?readr::read_csv)\nHow can we ignore the comment row?\n\n\n\n\n\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\n  \"data/penguins/penguins_raw.csv\",\n  comment = \"#\")\n\nNew names:\nRows: 344 Columns: 18\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): studyName, Species, Region, Island, Stage, Individual ID, Clutch C... dbl\n(8): ...1, Sample Number, Culmen Length (mm), Culmen Depth (mm), Flippe... date\n(1): Date Egg\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n   ...1 studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1     1 PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2     2 PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n   ...1\n  &lt;dbl&gt;\n1     1\n\nstr(penguins_raw)\n\nspc_tbl_ [344 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1               : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\nThe readxl package provides functions for reading Excel files\n\n\npenguins_raw &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1  studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 1     PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2 2     PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n## Read a subset \npenguins_subset &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\", sheet = \"Sheet1\", range = \"B1:O345\")\nhead(penguins_subset, 2)\n\n# A tibble: 2 × 14\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 7 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;\n\n\n\n\n\n\nThe haven package provides functions for reading SPSS, Stata, and SAS files\nIt looks like SPSS does not support spaces in column names so this is slightly different\n\n\npenguins_raw &lt;- haven::read_sav(\"data/penguins/penguins_raw.sav\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\n\n\n\n\n\nThe arrow package provides functions for reading Parquet and Feather files\nOptimized formats used in many data science projects\nProvides facility to read from “object storage” (e.g., Amazon S3)\n\n\nThe major benefits of object storage are the virtually unlimited scalability and the lower cost of storing large volumes of data for use cases such as data lakes, cloud native applications, analytics, log files, and machine learning (ML). 1\n\n\nRule of thumb:\n\nuse parquet for large files and long term storage\n\noptimized file size\n\nuse feather for optimized reading and short term storage\n\nmemory layout the same as in the process\n\n\n\n\n\n\n\npenguins_raw &lt;- arrow::read_parquet(\"data/penguins/penguins_raw.parquet\")\npenguins_raw &lt;- arrow::read_feather(\"data/penguins/penguins_raw.feather\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\nSupport for complex data structures\n\n\npenguin_species_island &lt;- arrow::read_parquet('data/penguins/penguin_species_nested.parquet')\nhead(penguin_species_island, 2)\n\n# A tibble: 2 × 2\n  Island                                 data\n  &lt;chr&gt;     &lt;list&lt;tbl_df&lt;Species:character&gt;&gt;&gt;\n1 Torgersen                          [52 × 1]\n2 Biscoe                            [168 × 1]\n\nhead(tidyr::unnest(penguin_species_island), 2)\n\nWarning: `cols` is now required when using `unnest()`.\nℹ Please use `cols = c(data)`.\n\n\n# A tibble: 2 × 2\n  Island    Species                            \n  &lt;chr&gt;     &lt;chr&gt;                              \n1 Torgersen Adelie Penguin (Pygoscelis adeliae)\n2 Torgersen Adelie Penguin (Pygoscelis adeliae)\n\n\n\n\n\n\nlibrary(microbenchmark)\nmicrobenchmark(\n  csv = readr::read_csv(\"data/penguins/penguins_raw.csv\", \n   show_col_types = FALSE, name_repair = 'minimal'),\n  parquet = arrow::read_parquet(\"data/penguins/penguins_raw.parquet\"),\n  feather = arrow::read_feather(\"data/penguins/penguins_raw.feather\")\n) \n\nWarning in microbenchmark(csv =\nreadr::read_csv(\"data/penguins/penguins_raw.csv\", : less accurate nanosecond\ntimes to avoid potential integer overflows\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nUnit: milliseconds\n    expr      min       lq     mean   median       uq       max neval cld\n     csv 7.450479 8.018514 8.811865 8.410371 9.001222 15.026582   100 a  \n parquet 1.748691 1.976405 2.097041 2.054654 2.156395  4.799583   100  b \n feather 1.263825 1.468579 1.641316 1.561362 1.669643  4.158835   100   c\n\n\n\n\n\nThe most important types of data are:\n\n\n\n\n\n\n\nData type\nDescription\n\n\n\n\nNumeric\nApproximations of the real numbers, \\(\\normalsize\\mathbb{R}\\) (e.g., mileage a car gets: 23.6, 20.9, etc.)\n\n\nInteger\nWhole numbers, \\(\\normalsize\\mathbb{Z}\\) (e.g., number of sales: 7, 0, 120, 63, etc.)\n\n\nCharacter\nText data (strings, e.g., product names)\n\n\nFactor\nCategorical data for classification (e.g., product groups)\n\n\nLogical\nTRUE, FALSE\n\n\nDate\nDate variables (e.g., sales dates: 21-06-2015, 06-21-15, 21-Jun-2015, etc.)\n\n\n\nVariables can be converted from one type to another using the appropriate functions (e.g., as.numeric(), as.integer(), as.character(), as.factor(), as.logical(), as.Date()).\n\n\n\n\nstr(penguins_raw)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nClean the column names\n\n\npenguins &lt;- janitor::clean_names(penguins_raw)\nstr(penguins)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ region           : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ stage            : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\n\n\n\n|&gt; is the “pipe” operator\n\nIt takes the result of the left side and passes it to the right side as the first argument\nVery useful when “chaining” multiple operations\n\n\n\npenguins |&gt;\n  head(2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\nhead(penguins, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\n\n\n\n\n\nPkg: dplyr provides function for data.frame manipulation\nPkg: stringr provides functions to manipulate strings (characters)\nfn: mutate takes each row and applies a function to create a new (or overwrite a) column\nfn: select selects columns\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(stringr)\npenguins_subset &lt;- penguins |&gt;\n  mutate(\n    species = str_split(species, \" \", n = 2, simplify = TRUE)[,1],\n    is_adult = str_detect(str_to_lower(stage), \"adult\"),\n    is_female = str_detect(str_to_lower(sex), \"female\"),\n    sex = str_to_lower(sex)) |&gt;\n  select(species, island, sex, is_adult,  culmen_length_mm, culmen_depth_mm, is_female)\npenguins_subset |&gt; head(2)\n\n# A tibble: 2 × 7\n  species island    sex    is_adult culmen_length_mm culmen_depth_mm is_female\n  &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;               &lt;dbl&gt;           &lt;dbl&gt; &lt;lgl&gt;    \n1 Adelie  Torgersen male   TRUE                 39.1            18.7 FALSE    \n2 Adelie  Torgersen female TRUE                 39.5            17.4 TRUE     \n\n\n\n\n\n\n#penguins_subset &lt;- \npenguins_subset &lt;- penguins_subset |&gt;\n  mutate(\n    across(starts_with('culmen'), \\(x) x / 10),\n    across(species:sex, as.factor),\n    across(c('is_adult', 'is_female'), as.numeric)\n    ) |&gt;\n  mutate_if(is.numeric,\n    list(scaled = \\(x) (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE))\n  ) |&gt;\n  rename_with(\n    \\(name) str_replace(name, \"mm\", \"cm\"),\n    starts_with('culmen'))\npenguins_subset |&gt; select(-starts_with('is')) |&gt; str()\n\ntibble [344 × 6] (S3: tbl_df/tbl/data.frame)\n $ species                : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ culmen_length_cm       : num [1:344] 3.91 3.95 4.03 NA 3.67 3.93 3.89 3.92 3.41 4.2 ...\n $ culmen_depth_cm        : num [1:344] 1.87 1.74 1.8 NA 1.93 2.06 1.78 1.96 1.81 2.02 ...\n $ culmen_length_cm_scaled: num [1:344] -0.883 -0.81 -0.663 NA -1.323 ...\n $ culmen_depth_cm_scaled : num [1:344] 0.784 0.126 0.43 NA 1.088 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\n\n\n\nSplit the problem into smaller pieces\n\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\nstr_replace(\"ammm\", \"mm\", \"cm\")\n\n[1] \"acmm\"\n\n\n\nCheck help files\n\n\n?str_replace\n\n\nCheck typeof() and class()\n\n\ntypeof(\\(name) str_replace(name, \"mm\", \"cm\"))\n\n[1] \"closure\"\n\n\n\\(\\rightarrow\\) closures are functions\n\nSee if you can produce some outcome on the reduced problem\n\n\nmy_function &lt;- \\(name) str_replace(name, \"mm\", \"cm\")\nmy_function('here are some mms')\n\n[1] \"here are some cms\"\n\n\n\n\n\n\nThis is only useful if a function is pure R code\n\n\nstr_replace\n\nfunction (string, pattern, replacement) \n{\n    if (!missing(replacement) && is_replacement_fun(replacement)) {\n        replacement &lt;- as_function(replacement)\n        return(str_transform(string, pattern, replacement))\n    }\n    check_lengths(string, pattern, replacement)\n    switch(type(pattern), empty = no_empty(), bound = no_boundary(), \n        fixed = stri_replace_first_fixed(string, pattern, replacement, \n            opts_fixed = opts(pattern)), coll = stri_replace_first_coll(string, \n            pattern, replacement, opts_collator = opts(pattern)), \n        regex = stri_replace_first_regex(string, pattern, fix_replacement(replacement), \n            opts_regex = opts(pattern)))\n}\n&lt;bytecode: 0x1126cf3c8&gt;\n&lt;environment: namespace:stringr&gt;\n\n\n\n\n\n\nCommon mistake that leads to cryptic error:\n\n\nmeans &lt;- c(4,5,6)\nmean[1]\n\nError in mean[1]: object of type 'closure' is not subsettable\n\n\n\n\n\n\n\n\n\n\n\nCreate different subsets of data\n“Filter in” (not out) \\(\\rightarrow\\) TRUE rows remain\n\n\nadelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\")\nunique(adelies$species)\n\n[1] Adelie\nLevels: Adelie Chinstrap Gentoo\n\nfemale_adelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\", is_female == 1)\nfemale_adelies |&gt; select(species, sex) |&gt; summary()\n\n      species       sex    \n Adelie   :73   female:73  \n Chinstrap: 0   male  : 0  \n Gentoo   : 0              \n\n\n\n\n\n\nCalculate any appropriate summary for a variable\n\n\nlibrary(tidyr)\npenguins |&gt;\n  drop_na(body_mass_g) |&gt;\n  summarize(avg_weight = mean(body_mass_g))\n\n# A tibble: 1 × 1\n  avg_weight\n       &lt;dbl&gt;\n1      4202.\n\n\n\nCalculate the summary for each group\n\n\npenguins_summary &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  group_by(species, sex) |&gt;\n  summarize(avg_clength = mean(culmen_length_cm))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\npenguins_summary\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex    avg_clength\n  &lt;fct&gt;     &lt;fct&gt;        &lt;dbl&gt;\n1 Adelie    female        3.73\n2 Adelie    male          4.04\n3 Adelie    &lt;NA&gt;          3.78\n4 Chinstrap female        4.66\n5 Chinstrap male          5.11\n6 Gentoo    female        4.56\n7 Gentoo    male          4.95\n8 Gentoo    &lt;NA&gt;          4.56\n\n\n\n\n\n\npenguins_summary |&gt;\n  pivot_wider(names_from = species, values_from = avg_clength) \n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npenguins_wide &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  select(culmen_length_cm, species, sex) |&gt;\n  pivot_wider(values_from = culmen_length_cm, names_from = species, values_fn = mean) |&gt;\n  arrange(sex) |&gt;\n  select(sex, Adelie, Chinstrap, Gentoo)\npenguins_wide\n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npivot_longer(penguins_wide, cols = -sex, names_to = \"species\", values_to = \"avg_clength\")\n\n# A tibble: 9 × 3\n  sex    species   avg_clength\n  &lt;fct&gt;  &lt;chr&gt;           &lt;dbl&gt;\n1 female Adelie           3.73\n2 female Chinstrap        4.66\n3 female Gentoo           4.56\n4 male   Adelie           4.04\n5 male   Chinstrap        5.11\n6 male   Gentoo           4.95\n7 &lt;NA&gt;   Adelie           3.78\n8 &lt;NA&gt;   Chinstrap       NA   \n9 &lt;NA&gt;   Gentoo           4.56\n\n\n\n\n\n\n\n\n\n\n\nBecome the Ornithologist\n\n\n\n\nRead the penguins_raw.feather file\nRemove all whitespace and special characters from the column names\nCalculate the body mass for each penguin in kg\nCreate a pivot-table with the median (?median) body mass for each species on each island\n\nthe island names should be in the first column\nthe species names should be the remaining columns\n\nRepeat the analysis but only for female penguins\n\n\n\n\n\n\n\n\n\nBecome the music manager\n\n\n\n\nRead the top10_charts.csv in chart_data\nWhat is the range of dates in this dataset? (Hint: ?min, ?max)\nWhat is the top region in terms of streams overall? (Hint: ?slice_max)\nCreate a pivot-table of the total streams (in this dataset) within a region on a given day (1st column day, remaining columns region names, values total streams)\n\n\n\n\n\n\n\nOften we have two separate datasets with corresponding groups of rows\n\nStreams, trackID in top10_charts.csv and Song metadata, trackID in top10_meta.csv\npurchaseid, customerid in noahs-orders.csv and productid, purchaseid in noahs-orders_items.csv and customerid, customer metadata in noahs-customers.csv\n\nCombine data using joins\n\n\ncharts &lt;- readr::read_csv(\"data/chart_data/top10_charts.csv\")\n\nRows: 7320 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): trackID, region, isrc\ndbl  (3): rank, streams, dayNumber\ndate (1): day\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsongs &lt;- readr::read_csv(\"data/chart_data/top10_meta.csv\")\n\nRows: 347 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (12): trackID, trackName, artistName, artistIds, isrc, primary_artistNa...\ndbl  (16): explicit, trackPopularity, n_available_markets, danceability, ene...\ndate  (1): releaseDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstr(charts, give.attr=FALSE)\n\nspc_tbl_ [7,320 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID  : chr [1:7320] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" ...\n $ rank     : num [1:7320] 7 6 7 7 7 8 9 9 10 10 ...\n $ streams  : num [1:7320] 26234 4276985 3688979 3255639 3478044 ...\n $ day      : Date[1:7320], format: \"2020-08-14\" \"2020-03-27\" ...\n $ dayNumber: num [1:7320] 1318 1178 1179 1180 1181 ...\n $ region   : chr [1:7320] \"at\" \"global\" \"global\" \"global\" ...\n $ isrc     : chr [1:7320] \"DEUM72004523\" \"GBAHT1901303\" \"GBAHT1901303\" \"GBAHT1901303\" ...\n\nstr(songs, give.attr=FALSE)\n\nspc_tbl_ [347 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID              : chr [1:347] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"01I9AEz658sQnQzCL3K3QG\" \"033if6Adj8fwBYsQzHOfQ8\" ...\n $ trackName            : chr [1:347] \"Fall Auf\" \"Break My Heart\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ artistName           : chr [1:347] \"Cro feat. badchieff\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra feat. Samra\" ...\n $ artistIds            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ isrc                 : chr [1:347] \"DEUM72004523\" \"GBAHT1901303\" \"DECE72000379\" \"DECE72000176\" ...\n $ explicit             : num [1:347] 0 0 1 0 0 0 0 1 0 0 ...\n $ trackPopularity      : num [1:347] 64 83 75 71 69 82 70 74 89 79 ...\n $ primary_artistName   : chr [1:347] \"Cro\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra\" ...\n $ primary_artistID     : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d\" ...\n $ artistIDs            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ albumName            : chr [1:347] \"Fall Auf\" \"Future Nostalgia\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ albumID              : chr [1:347] \"1qdHQo41Vkkgs8HtMk5b96\" \"7fJJK56U9fHixgO0HQkhtI\" \"15Njx2PcwnNsI65fnbM7Pw\" \"5cqwoGrjFr3VKYZ9ZC0eL2\" ...\n $ available_markets    : chr [1:347] \"AD, AE, AL, AR, AT, AU, BA, BE, BG, BH, BO, BR, BY, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES,\"| __truncated__ \"AD, AE, AR, AU, BE, BG, BH, BO, BR, CA, CL, CO, CR, CY, CZ, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB, GR, GT, HK,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ ...\n $ n_available_markets  : num [1:347] 92 76 79 79 87 79 3 79 92 92 ...\n $ releaseDate          : Date[1:347], format: \"2020-08-13\" \"2020-03-27\" ...\n $ releaseDate_precision: chr [1:347] \"day\" \"day\" \"day\" \"day\" ...\n $ danceability         : num [1:347] 0.5 0.73 0.73 0.701 0.84 0.795 0.814 0.774 0.641 0.571 ...\n $ energy               : num [1:347] 0.743 0.729 0.777 0.714 0.648 0.607 0.794 0.805 0.324 0.693 ...\n $ key                  : num [1:347] 2 4 1 10 10 7 7 11 11 6 ...\n $ loudness             : num [1:347] -6.65 -3.43 -6.38 -5.91 -5.54 ...\n $ mode                 : num [1:347] 1 0 0 1 0 1 1 0 1 0 ...\n $ speechiness          : num [1:347] 0.0373 0.0886 0.29 0.524 0.0489 0.23 0.0887 0.302 0.0299 0.0545 ...\n $ acousticness         : num [1:347] 0.307 0.167 0.0455 0.289 0.101 0.128 0.119 0.0509 0.698 0.0054 ...\n $ instrumentalness     : num [1:347] 0.00 1.39e-06 1.10e-03 0.00 1.00e-04 1.90e-01 9.00e-04 0.00 0.00 0.00 ...\n $ liveness             : num [1:347] 0.133 0.349 0.0759 0.0883 0.0996 0.111 0.348 0.149 0.328 0.173 ...\n $ valence              : num [1:347] 0.332 0.467 0.578 0.604 0.431 0.25 0.647 0.261 0.273 0.393 ...\n $ tempo                : num [1:347] 166.3 113 177.9 86.9 103 ...\n $ duration_ms          : num [1:347] 191827 221820 130307 173353 124690 ...\n $ time_signature       : num [1:347] 4 4 4 4 4 4 4 4 4 4 ...\n\n\n\n\n\n\nThe name of the join determines which “ids” are kept\nleft_join keeps all rows that have an id in the left dataset\ninner_join only keeps rows with ids in both datasets\n\n\ndata1 &lt;- data.frame(group = c('a', 'a', 'b','c'), value = c(1,2,3,4)) # missing group 'd'\ndata2 &lt;- data.frame(group2 = c('a', 'c', 'd'), value2 = factor(c(\"abc\", \"def\", \"ghi\"))) # missing group 'b'\n\nleft_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n\nright_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n4     d    NA    ghi\n\ninner_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n\n\n\n\n\n\nfull_join returns all rows from both datasets\nsemi_join returns only the columns of the left dataset and filters rows with id in the right dataset\nanti_join keeps only rows that do not have an id in the right table\n\n\nfull_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n5     d    NA    ghi\n\nsemi_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nfilter(data1, group %in% data2$group2)\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nanti_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     b     3\n\n\n\n\n\n\n\n\n\n\n\nBE the music manager\n\n\n\n\nWho are the top 10 artists in terms of total global streams?\nWhat is their most succesful song?\nFor how many songs are do we not have meta data?\nHow many songs are there in the data? (Hint: ?n_distinct, or ?length, ?unique)\nSave the combined data as top10_all.parquet\n\n\n\n\n\n\nLinks\n\nR Logo\nNoah’s Database\n\nBibliography\n\n\nHorst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data. https://doi.org/10.5281/zenodo.3960218."
  },
  {
    "objectID": "00-introduction_to_r-page.html#why-r",
    "href": "00-introduction_to_r-page.html#why-r",
    "title": "Introduction to R",
    "section": "",
    "text": "Well established in business and scientific computing\nVery powerful language\n\nExpress any operation in terms of\nOften complex functions are already implemented\n\nVery good package manager and ecosystem\n\nWe will use many tools created by companies, universities, and other R community members\n\nVery good for reproducibility\n\nCode documents the process\nShould run the same on my and your machine\nShould be easily adaptable to changing data\n\nOpen source\n\nAll packages can be inspected\nFree to install and use on any computer\n\nDeveloped (partly) and hosted at WU 😋"
  },
  {
    "objectID": "00-introduction_to_r-page.html#what-do-we-need",
    "href": "00-introduction_to_r-page.html#what-do-we-need",
    "title": "Introduction to R",
    "section": "",
    "text": "The R interpreter\n\nThe program that “interprets” R code and runs it\nVery bare-bones, essentially just a text field\nDoes not store code files for reproducibility\n\n\n\nprint(\"Hello, WU!\")\n\n[1] \"Hello, WU!\"\n\npaste0(\"One plus two is: \", 1 + 2)\n\n[1] \"One plus two is: 3\"\n\nc &lt;- data.frame(p = seq(0, 2 * pi, by = 0.001))\nc$h_x &lt;- 16 * sin(c$p)^3\nc$h_y &lt;- 13 * cos(c$p) - 5 * cos(2 * c$p) - 2 * cos(3 * c$p) - cos(4 * c$p)\nplot(c$h_x, c$h_y, type = \"l\", main = \"I &lt;3 R\", frame = F, xlab = NA, ylab = NA)\n\n\n\n\n\n\n\n\n\n\nAn Integrated Development Environment (IDE)\n\nMakes writing and storing R code easier (more fun!)\nThree options compatible with this course:\n\nR Studio Desktop (Recommended)\n\nFocused on R\nEasiest option\n\nVS Code\n\nRecommended if you (plan to) use other languages (Python, C++, Julia, etc.)\nNeeds extension for R but works well\n\nJupyterLab\n\n“Notebooks” for R, Python, and Julia\nOutput generated directly under code “cells”"
  },
  {
    "objectID": "00-introduction_to_r-page.html#if-you-already-know-r",
    "href": "00-introduction_to_r-page.html#if-you-already-know-r",
    "title": "Introduction to R",
    "section": "",
    "text": "My favorite R package\n\n\n\n\nDownload the presentation template my_favorite_r_package.qmd and the bibliography file data_literacy.bib from Canvas\nSelect a package that was useful to you in the past\nPrepare a short presentation about the package\n\nInclude examples of how to use the package\nShow in which situations that is useful"
  },
  {
    "objectID": "00-introduction_to_r-page.html#basic-workflow-r-studio",
    "href": "00-introduction_to_r-page.html#basic-workflow-r-studio",
    "title": "Introduction to R",
    "section": "",
    "text": "Ctrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "00-introduction_to_r-page.html#basic-workflow-vs-code",
    "href": "00-introduction_to_r-page.html#basic-workflow-vs-code",
    "title": "Introduction to R",
    "section": "",
    "text": "Ctrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "00-introduction_to_r-page.html#r-syntax-comments-assignment",
    "href": "00-introduction_to_r-page.html#r-syntax-comments-assignment",
    "title": "Introduction to R",
    "section": "",
    "text": "# This is a comment\nprint(\"Hi\") # also a comment\n\n[1] \"Hi\"\n\n## Assignment of varibale names\nx &lt;- 1\nx\n\n[1] 1\n\n## Missing values\nNA\n\n[1] NA\n\n## Vectors\ny &lt;- c(1, 2, 3, NA)\ny\n\n[1]  1  2  3 NA"
  },
  {
    "objectID": "00-introduction_to_r-page.html#functions",
    "href": "00-introduction_to_r-page.html#functions",
    "title": "Introduction to R",
    "section": "",
    "text": "## built-in\nsum(y)\n\n[1] NA\n\nsum(y, na.rm = FALSE)\n\n[1] NA\n\nsum(y, na.rm = TRUE)\n\n[1] 6\n\n## User functions\na_plus_b &lt;- function(a, b = 1) {\n    return(a + b)\n}\na_plus_b(y)\n\n[1]  2  3  4 NA\n\na_plus_b(y, 2)\n\n[1]  3  4  5 NA\n\na_plus_b(b = 2, a = y)\n\n[1]  3  4  5 NA\n\n## Functions provided by packages\n## Installation\n#install.packages(\"ineq\")\nineq::Gini(y)\n\n[1] 0.2222222\n\n## or\nlibrary(ineq)\nGini(y)\n\n[1] 0.2222222\n\n## Help \n?Gini"
  },
  {
    "objectID": "00-introduction_to_r-page.html#r-syntax-indexing-logic",
    "href": "00-introduction_to_r-page.html#r-syntax-indexing-logic",
    "title": "Introduction to R",
    "section": "",
    "text": "y[1]\n\n[1] 1\n\ny[-1]\n\n[1]  2  3 NA\n\ny[2:3]\n\n[1] 2 3\n\ny[c(1, 3, 4)]\n\n[1]  1  3 NA\n\nset.seed(1)\nx &lt;- y / 2 + rnorm(length(y))\ncbind(y, x)\n\n      y          x\n[1,]  1 -0.1264538\n[2,]  2  1.1836433\n[3,]  3  0.6643714\n[4,] NA         NA\n\ny &gt; 2\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 & x &gt; 0\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 | x &gt; 0\n\n[1] FALSE  TRUE  TRUE    NA\n\ny[y &gt; 2 | x &gt; 0]\n\n[1]  2  3 NA"
  },
  {
    "objectID": "00-introduction_to_r-page.html#r-syntax-loops-ranges",
    "href": "00-introduction_to_r-page.html#r-syntax-loops-ranges",
    "title": "Introduction to R",
    "section": "",
    "text": "## 'elem' is a temporary variable\nfor (elem in y) {\n    print(paste(\"Current y value is:\", elem))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## 'seq_along' returns a vector which indexes the argument\nfor (i in seq_along(y)) {\n    print(paste(\"Current y value is:\", y[i]))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## set.seed guarantees the same random numbers every time\nset.seed(1)\ntotal &lt;- 0\nwhile (total &lt; 1) {\n    ## runif generates random numbers between 0 and 1\n    total &lt;- total + runif(1)\n    print(paste(\"Current total value is:\", total))\n}\n\n[1] \"Current total value is: 0.2655086631421\"\n[1] \"Current total value is: 0.63763256277889\"\n[1] \"Current total value is: 1.21048592613079\"\n\n## ranges\n1:3\n\n[1] 1 2 3\n\n10:3\n\n[1] 10  9  8  7  6  5  4  3\n\nseq(3, 11, by = 2)\n\n[1]  3  5  7  9 11"
  },
  {
    "objectID": "00-introduction_to_r-page.html#r-syntax-conditional-logic",
    "href": "00-introduction_to_r-page.html#r-syntax-conditional-logic",
    "title": "Introduction to R",
    "section": "",
    "text": "z &lt;- -2:3\nfor (x in z) {\n  print(paste(\"x =\", x))\n    if (x &gt; 0) {\n        print(\"x is positive\")\n    } else if (x &gt; 2) {\n        print(\"x is greater than 2\")\n    } else if (x &lt; 0) {\n        print(\"x is negative\")\n    } else if (x == 0) {\n        print(\"x is zero\")\n    }\n}\n\n[1] \"x = -2\"\n[1] \"x is negative\"\n[1] \"x = -1\"\n[1] \"x is negative\"\n[1] \"x = 0\"\n[1] \"x is zero\"\n[1] \"x = 1\"\n[1] \"x is positive\"\n[1] \"x = 2\"\n[1] \"x is positive\"\n[1] \"x = 3\"\n[1] \"x is positive\"\n\nz[z &lt;= 0]\n\n[1] -2 -1  0\n\nz[z &gt;= 0]\n\n[1] 0 1 2 3\n\nz[z != 0]\n\n[1] -2 -1  1  2  3\n\nz[! z &lt; 0]\n\n[1] 0 1 2 3"
  },
  {
    "objectID": "00-introduction_to_r-page.html#exercise",
    "href": "00-introduction_to_r-page.html#exercise",
    "title": "Introduction to R",
    "section": "",
    "text": "Write your own function\n\n\n\n\nThe function should take two arguments a and b\nFirst, check if a and b have the same number of elements (see ?length)\n\nIf they have a different number of elements, return NA\n\nIterate over the elements of a and b and check which vector’s element is larger (or if they are equal)\nIf they are equal print the index of the element and “equal”\nIf the element in a is larger print the index of the elemnt and “a larger”\nIf the element in b is larger print the index of the elemnt and “b larger”\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(1, 2, 3, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 1 2 3 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nNA\n\n[1] NA\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(0, 2, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 0 2 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nprint(\"1 a larger\")\n\n[1] \"1 a larger\"\n\nprint(\"2 equal\")\n\n[1] \"2 equal\"\n\nprint(\"3 b larger\")\n\n[1] \"3 b larger\""
  },
  {
    "objectID": "00-introduction_to_r-page.html#rectangular-data-frames-creation-and-access",
    "href": "00-introduction_to_r-page.html#rectangular-data-frames-creation-and-access",
    "title": "Introduction to R",
    "section": "",
    "text": "data &lt;- data.frame(x = -1:1, y = 3:1, z = c(\"a\", \"b\", NA))\ndata\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\nclass(data)\n\n[1] \"data.frame\"\n\n## Variable access\ndata$x\n\n[1] -1  0  1\n\ndata$x + data$y\n\n[1] 2 2 2\n\nrow_summaries &lt;- with(data, \n  data.frame(\n    rsum = x + y,\n    rdiff = x - y\n  ))\nrow_summaries\n\n  rsum rdiff\n1    2    -4\n2    2    -2\n3    2     0"
  },
  {
    "objectID": "00-introduction_to_r-page.html#rectangular-data-frames-overview",
    "href": "00-introduction_to_r-page.html#rectangular-data-frames-overview",
    "title": "Introduction to R",
    "section": "",
    "text": "str(data)\n\n'data.frame':   3 obs. of  3 variables:\n $ x: int  -1 0 1\n $ y: int  3 2 1\n $ z: chr  \"a\" \"b\" NA\n\nsummary(data)\n\n       x              y            z            \n Min.   :-1.0   Min.   :1.0   Length:3          \n 1st Qu.:-0.5   1st Qu.:1.5   Class :character  \n Median : 0.0   Median :2.0   Mode  :character  \n Mean   : 0.0   Mean   :2.0                     \n 3rd Qu.: 0.5   3rd Qu.:2.5                     \n Max.   : 1.0   Max.   :3.0                     \n\nhead(data)\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#rectangular-data-frames-indexing",
    "href": "00-introduction_to_r-page.html#rectangular-data-frames-indexing",
    "title": "Introduction to R",
    "section": "",
    "text": "## 2D structure of data\n## Empty argument means \"all\"#| \ndata[, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1:3, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1, ]\n\n   x y z\n1 -1 3 a\n\ndata[c(1, 3), c(\"x\", \"z\")]\n\n   x    z\n1 -1    a\n3  1 &lt;NA&gt;\n\ndata[data$x &lt; 3,]\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#rectangular-data-adding-and-removing-variables",
    "href": "00-introduction_to_r-page.html#rectangular-data-adding-and-removing-variables",
    "title": "Introduction to R",
    "section": "",
    "text": "## new data has to have the same number of elements\ndata$a &lt;- 2 * data$x\ndata\n\n   x y    z  a\n1 -1 3    a -2\n2  0 2    b  0\n3  1 1 &lt;NA&gt;  2\n\ndata$b &lt;- c(\"one\", \"two\", \"three\")\ndata\n\n   x y    z  a     b\n1 -1 3    a -2   one\n2  0 2    b  0   two\n3  1 1 &lt;NA&gt;  2 three\n\ndata$x &lt;- NULL\ndata\n\n  y    z  a     b\n1 3    a -2   one\n2 2    b  0   two\n3 1 &lt;NA&gt;  2 three\n\ndata$a &lt;- log(data$a)\n\nWarning in log(data$a): NaNs produced\n\ndata\n\n  y    z         a     b\n1 3    a       NaN   one\n2 2    b      -Inf   two\n3 1 &lt;NA&gt; 0.6931472 three\n\ndata$b[data$b == \"two\"] &lt;- \"TWO!\"\ndata$z[is.na(data$z)] &lt;- \"c\"\ndata$a[is.nan(data$a)] &lt;- 0\ndata\n\n  y z         a     b\n1 3 a 0.0000000   one\n2 2 b      -Inf  TWO!\n3 1 c 0.6931472 three"
  },
  {
    "objectID": "00-introduction_to_r-page.html#exercise-1",
    "href": "00-introduction_to_r-page.html#exercise-1",
    "title": "Introduction to R",
    "section": "",
    "text": "Generate your own data\n\n\n\n\nLook at the helpfiles of rnorm, runif, and ifelse\nCreate a data.frame with 10 rows and variables x, generated using runif and y, generated using rnorm\nAdd variable z which takes the value 1 if x is larger than y and 0 otherwise\nCreate a second data.frame that holds the rows of the original one for which z == 1 is TRUE.\nRemove column z from the second data.frame\nWhat happens if you try to create a data.frame when x and y have a differnent number of elements?\nWhat happens if you run the code you wrote for this exercise again (and again)?\nHow can you ensure that each run yields the same results?"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reading-data",
    "href": "00-introduction_to_r-page.html#reading-data",
    "title": "Introduction to R",
    "section": "",
    "text": "Please download & unzip the folder found in “data” in Canvas\nWe will first use the “penguins” folder which includes the penguins_raw data set in multiple file formats\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\"data/penguins/penguins_raw.csv\")\n\nNew names:\n• `` -&gt; `...1`\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 345 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): ...1, studyName, Species, Region, Island, Stage, Individual ID, C...\ndbl   (7): Sample Number, Culmen Length (mm), Culmen Depth (mm), Flipper Len...\ndate  (1): Date Egg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1     studyName `Sample Number` Species Region Island Stage `Individual ID`\n  &lt;chr&gt;    &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 # this … &lt;NA&gt;                   NA &lt;NA&gt;    &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;           \n2 1        PAL0708                 1 Adelie… Anvers Torge… Adul… N1A1           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n. . .\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n  ...1                                              \n  &lt;chr&gt;                                             \n1 # this is a comment making the data harder to read\n\n\n\n\n\n\n\n\nFix the data\n\n\n\n\nThe second row (after the column names) in the penguins_raw.csv file is a comment\nLook at the help file for the readr::read_csv function (?readr::read_csv)\nHow can we ignore the comment row?"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reading-data-solution",
    "href": "00-introduction_to_r-page.html#reading-data-solution",
    "title": "Introduction to R",
    "section": "",
    "text": "## CSV\npenguins_raw &lt;- readr::read_csv(\n  \"data/penguins/penguins_raw.csv\",\n  comment = \"#\")\n\nNew names:\nRows: 344 Columns: 18\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): studyName, Species, Region, Island, Stage, Individual ID, Clutch C... dbl\n(8): ...1, Sample Number, Culmen Length (mm), Culmen Depth (mm), Flippe... date\n(1): Date Egg\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n   ...1 studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1     1 PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2     2 PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n   ...1\n  &lt;dbl&gt;\n1     1\n\nstr(penguins_raw)\n\nspc_tbl_ [344 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1               : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reading-data-other-file-formats",
    "href": "00-introduction_to_r-page.html#reading-data-other-file-formats",
    "title": "Introduction to R",
    "section": "",
    "text": "The readxl package provides functions for reading Excel files\n\n\npenguins_raw &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1  studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 1     PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2 2     PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n## Read a subset \npenguins_subset &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\", sheet = \"Sheet1\", range = \"B1:O345\")\nhead(penguins_subset, 2)\n\n# A tibble: 2 × 14\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 7 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reading-data-other-file-formats-1",
    "href": "00-introduction_to_r-page.html#reading-data-other-file-formats-1",
    "title": "Introduction to R",
    "section": "",
    "text": "The haven package provides functions for reading SPSS, Stata, and SAS files\nIt looks like SPSS does not support spaces in column names so this is slightly different\n\n\npenguins_raw &lt;- haven::read_sav(\"data/penguins/penguins_raw.sav\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reading-big-data-the-arrow-package",
    "href": "00-introduction_to_r-page.html#reading-big-data-the-arrow-package",
    "title": "Introduction to R",
    "section": "",
    "text": "The arrow package provides functions for reading Parquet and Feather files\nOptimized formats used in many data science projects\nProvides facility to read from “object storage” (e.g., Amazon S3)\n\n\nThe major benefits of object storage are the virtually unlimited scalability and the lower cost of storing large volumes of data for use cases such as data lakes, cloud native applications, analytics, log files, and machine learning (ML). 1\n\n\nRule of thumb:\n\nuse parquet for large files and long term storage\n\noptimized file size\n\nuse feather for optimized reading and short term storage\n\nmemory layout the same as in the process"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reading-big-data-the-arrow-package-1",
    "href": "00-introduction_to_r-page.html#reading-big-data-the-arrow-package-1",
    "title": "Introduction to R",
    "section": "",
    "text": "penguins_raw &lt;- arrow::read_parquet(\"data/penguins/penguins_raw.parquet\")\npenguins_raw &lt;- arrow::read_feather(\"data/penguins/penguins_raw.feather\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\nSupport for complex data structures\n\n\npenguin_species_island &lt;- arrow::read_parquet('data/penguins/penguin_species_nested.parquet')\nhead(penguin_species_island, 2)\n\n# A tibble: 2 × 2\n  Island                                 data\n  &lt;chr&gt;     &lt;list&lt;tbl_df&lt;Species:character&gt;&gt;&gt;\n1 Torgersen                          [52 × 1]\n2 Biscoe                            [168 × 1]\n\nhead(tidyr::unnest(penguin_species_island), 2)\n\nWarning: `cols` is now required when using `unnest()`.\nℹ Please use `cols = c(data)`.\n\n\n# A tibble: 2 × 2\n  Island    Species                            \n  &lt;chr&gt;     &lt;chr&gt;                              \n1 Torgersen Adelie Penguin (Pygoscelis adeliae)\n2 Torgersen Adelie Penguin (Pygoscelis adeliae)"
  },
  {
    "objectID": "00-introduction_to_r-page.html#benchmarks",
    "href": "00-introduction_to_r-page.html#benchmarks",
    "title": "Introduction to R",
    "section": "",
    "text": "library(microbenchmark)\nmicrobenchmark(\n  csv = readr::read_csv(\"data/penguins/penguins_raw.csv\", \n   show_col_types = FALSE, name_repair = 'minimal'),\n  parquet = arrow::read_parquet(\"data/penguins/penguins_raw.parquet\"),\n  feather = arrow::read_feather(\"data/penguins/penguins_raw.feather\")\n) \n\nWarning in microbenchmark(csv =\nreadr::read_csv(\"data/penguins/penguins_raw.csv\", : less accurate nanosecond\ntimes to avoid potential integer overflows\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nUnit: milliseconds\n    expr      min       lq     mean   median       uq       max neval cld\n     csv 7.450479 8.018514 8.811865 8.410371 9.001222 15.026582   100 a  \n parquet 1.748691 1.976405 2.097041 2.054654 2.156395  4.799583   100  b \n feather 1.263825 1.468579 1.641316 1.561362 1.669643  4.158835   100   c"
  },
  {
    "objectID": "00-introduction_to_r-page.html#data-types",
    "href": "00-introduction_to_r-page.html#data-types",
    "title": "Introduction to R",
    "section": "",
    "text": "The most important types of data are:\n\n\n\n\n\n\n\nData type\nDescription\n\n\n\n\nNumeric\nApproximations of the real numbers, \\(\\normalsize\\mathbb{R}\\) (e.g., mileage a car gets: 23.6, 20.9, etc.)\n\n\nInteger\nWhole numbers, \\(\\normalsize\\mathbb{Z}\\) (e.g., number of sales: 7, 0, 120, 63, etc.)\n\n\nCharacter\nText data (strings, e.g., product names)\n\n\nFactor\nCategorical data for classification (e.g., product groups)\n\n\nLogical\nTRUE, FALSE\n\n\nDate\nDate variables (e.g., sales dates: 21-06-2015, 06-21-15, 21-Jun-2015, etc.)\n\n\n\nVariables can be converted from one type to another using the appropriate functions (e.g., as.numeric(), as.integer(), as.character(), as.factor(), as.logical(), as.Date())."
  },
  {
    "objectID": "00-introduction_to_r-page.html#lets-clean-up-the-penguins",
    "href": "00-introduction_to_r-page.html#lets-clean-up-the-penguins",
    "title": "Introduction to R",
    "section": "",
    "text": "str(penguins_raw)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nClean the column names\n\n\npenguins &lt;- janitor::clean_names(penguins_raw)\nstr(penguins)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ region           : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ stage            : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "00-introduction_to_r-page.html#data-preprocessing-syntax",
    "href": "00-introduction_to_r-page.html#data-preprocessing-syntax",
    "title": "Introduction to R",
    "section": "",
    "text": "|&gt; is the “pipe” operator\n\nIt takes the result of the left side and passes it to the right side as the first argument\nVery useful when “chaining” multiple operations\n\n\n\npenguins |&gt;\n  head(2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\nhead(penguins, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#data-preprocessing-mutation",
    "href": "00-introduction_to_r-page.html#data-preprocessing-mutation",
    "title": "Introduction to R",
    "section": "",
    "text": "Pkg: dplyr provides function for data.frame manipulation\nPkg: stringr provides functions to manipulate strings (characters)\nfn: mutate takes each row and applies a function to create a new (or overwrite a) column\nfn: select selects columns\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(stringr)\npenguins_subset &lt;- penguins |&gt;\n  mutate(\n    species = str_split(species, \" \", n = 2, simplify = TRUE)[,1],\n    is_adult = str_detect(str_to_lower(stage), \"adult\"),\n    is_female = str_detect(str_to_lower(sex), \"female\"),\n    sex = str_to_lower(sex)) |&gt;\n  select(species, island, sex, is_adult,  culmen_length_mm, culmen_depth_mm, is_female)\npenguins_subset |&gt; head(2)\n\n# A tibble: 2 × 7\n  species island    sex    is_adult culmen_length_mm culmen_depth_mm is_female\n  &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;               &lt;dbl&gt;           &lt;dbl&gt; &lt;lgl&gt;    \n1 Adelie  Torgersen male   TRUE                 39.1            18.7 FALSE    \n2 Adelie  Torgersen female TRUE                 39.5            17.4 TRUE"
  },
  {
    "objectID": "00-introduction_to_r-page.html#data-preprocessing-multiple-columns",
    "href": "00-introduction_to_r-page.html#data-preprocessing-multiple-columns",
    "title": "Introduction to R",
    "section": "",
    "text": "#penguins_subset &lt;- \npenguins_subset &lt;- penguins_subset |&gt;\n  mutate(\n    across(starts_with('culmen'), \\(x) x / 10),\n    across(species:sex, as.factor),\n    across(c('is_adult', 'is_female'), as.numeric)\n    ) |&gt;\n  mutate_if(is.numeric,\n    list(scaled = \\(x) (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE))\n  ) |&gt;\n  rename_with(\n    \\(name) str_replace(name, \"mm\", \"cm\"),\n    starts_with('culmen'))\npenguins_subset |&gt; select(-starts_with('is')) |&gt; str()\n\ntibble [344 × 6] (S3: tbl_df/tbl/data.frame)\n $ species                : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ culmen_length_cm       : num [1:344] 3.91 3.95 4.03 NA 3.67 3.93 3.89 3.92 3.41 4.2 ...\n $ culmen_depth_cm        : num [1:344] 1.87 1.74 1.8 NA 1.93 2.06 1.78 1.96 1.81 2.02 ...\n $ culmen_length_cm_scaled: num [1:344] -0.883 -0.81 -0.663 NA -1.323 ...\n $ culmen_depth_cm_scaled : num [1:344] 0.784 0.126 0.43 NA 1.088 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "00-introduction_to_r-page.html#hint-figuring-out-what-is-going-on",
    "href": "00-introduction_to_r-page.html#hint-figuring-out-what-is-going-on",
    "title": "Introduction to R",
    "section": "",
    "text": "Split the problem into smaller pieces\n\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\nstr_replace(\"ammm\", \"mm\", \"cm\")\n\n[1] \"acmm\"\n\n\n\nCheck help files\n\n\n?str_replace\n\n\nCheck typeof() and class()\n\n\ntypeof(\\(name) str_replace(name, \"mm\", \"cm\"))\n\n[1] \"closure\"\n\n\n\\(\\rightarrow\\) closures are functions\n\nSee if you can produce some outcome on the reduced problem\n\n\nmy_function &lt;- \\(name) str_replace(name, \"mm\", \"cm\")\nmy_function('here are some mms')\n\n[1] \"here are some cms\""
  },
  {
    "objectID": "00-introduction_to_r-page.html#hint-read-the-source-code",
    "href": "00-introduction_to_r-page.html#hint-read-the-source-code",
    "title": "Introduction to R",
    "section": "",
    "text": "This is only useful if a function is pure R code\n\n\nstr_replace\n\nfunction (string, pattern, replacement) \n{\n    if (!missing(replacement) && is_replacement_fun(replacement)) {\n        replacement &lt;- as_function(replacement)\n        return(str_transform(string, pattern, replacement))\n    }\n    check_lengths(string, pattern, replacement)\n    switch(type(pattern), empty = no_empty(), bound = no_boundary(), \n        fixed = stri_replace_first_fixed(string, pattern, replacement, \n            opts_fixed = opts(pattern)), coll = stri_replace_first_coll(string, \n            pattern, replacement, opts_collator = opts(pattern)), \n        regex = stri_replace_first_regex(string, pattern, fix_replacement(replacement), \n            opts_regex = opts(pattern)))\n}\n&lt;bytecode: 0x1126cf3c8&gt;\n&lt;environment: namespace:stringr&gt;"
  },
  {
    "objectID": "00-introduction_to_r-page.html#aside-functions-and-variable-names",
    "href": "00-introduction_to_r-page.html#aside-functions-and-variable-names",
    "title": "Introduction to R",
    "section": "",
    "text": "Common mistake that leads to cryptic error:\n\n\nmeans &lt;- c(4,5,6)\nmean[1]\n\nError in mean[1]: object of type 'closure' is not subsettable"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reducing-rows-filtering",
    "href": "00-introduction_to_r-page.html#reducing-rows-filtering",
    "title": "Introduction to R",
    "section": "",
    "text": "Create different subsets of data\n“Filter in” (not out) \\(\\rightarrow\\) TRUE rows remain\n\n\nadelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\")\nunique(adelies$species)\n\n[1] Adelie\nLevels: Adelie Chinstrap Gentoo\n\nfemale_adelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\", is_female == 1)\nfemale_adelies |&gt; select(species, sex) |&gt; summary()\n\n      species       sex    \n Adelie   :73   female:73  \n Chinstrap: 0   male  : 0  \n Gentoo   : 0"
  },
  {
    "objectID": "00-introduction_to_r-page.html#reducing-rows-summarizing",
    "href": "00-introduction_to_r-page.html#reducing-rows-summarizing",
    "title": "Introduction to R",
    "section": "",
    "text": "Calculate any appropriate summary for a variable\n\n\nlibrary(tidyr)\npenguins |&gt;\n  drop_na(body_mass_g) |&gt;\n  summarize(avg_weight = mean(body_mass_g))\n\n# A tibble: 1 × 1\n  avg_weight\n       &lt;dbl&gt;\n1      4202.\n\n\n\nCalculate the summary for each group\n\n\npenguins_summary &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  group_by(species, sex) |&gt;\n  summarize(avg_clength = mean(culmen_length_cm))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\npenguins_summary\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex    avg_clength\n  &lt;fct&gt;     &lt;fct&gt;        &lt;dbl&gt;\n1 Adelie    female        3.73\n2 Adelie    male          4.04\n3 Adelie    &lt;NA&gt;          3.78\n4 Chinstrap female        4.66\n5 Chinstrap male          5.11\n6 Gentoo    female        4.56\n7 Gentoo    male          4.95\n8 Gentoo    &lt;NA&gt;          4.56"
  },
  {
    "objectID": "00-introduction_to_r-page.html#pivot-tables",
    "href": "00-introduction_to_r-page.html#pivot-tables",
    "title": "Introduction to R",
    "section": "",
    "text": "penguins_summary |&gt;\n  pivot_wider(names_from = species, values_from = avg_clength) \n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npenguins_wide &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  select(culmen_length_cm, species, sex) |&gt;\n  pivot_wider(values_from = culmen_length_cm, names_from = species, values_fn = mean) |&gt;\n  arrange(sex) |&gt;\n  select(sex, Adelie, Chinstrap, Gentoo)\npenguins_wide\n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npivot_longer(penguins_wide, cols = -sex, names_to = \"species\", values_to = \"avg_clength\")\n\n# A tibble: 9 × 3\n  sex    species   avg_clength\n  &lt;fct&gt;  &lt;chr&gt;           &lt;dbl&gt;\n1 female Adelie           3.73\n2 female Chinstrap        4.66\n3 female Gentoo           4.56\n4 male   Adelie           4.04\n5 male   Chinstrap        5.11\n6 male   Gentoo           4.95\n7 &lt;NA&gt;   Adelie           3.78\n8 &lt;NA&gt;   Chinstrap       NA   \n9 &lt;NA&gt;   Gentoo           4.56"
  },
  {
    "objectID": "00-introduction_to_r-page.html#exercise-2",
    "href": "00-introduction_to_r-page.html#exercise-2",
    "title": "Introduction to R",
    "section": "",
    "text": "Become the Ornithologist\n\n\n\n\nRead the penguins_raw.feather file\nRemove all whitespace and special characters from the column names\nCalculate the body mass for each penguin in kg\nCreate a pivot-table with the median (?median) body mass for each species on each island\n\nthe island names should be in the first column\nthe species names should be the remaining columns\n\nRepeat the analysis but only for female penguins\n\n\n\n\n\n\n\n\n\nBecome the music manager\n\n\n\n\nRead the top10_charts.csv in chart_data\nWhat is the range of dates in this dataset? (Hint: ?min, ?max)\nWhat is the top region in terms of streams overall? (Hint: ?slice_max)\nCreate a pivot-table of the total streams (in this dataset) within a region on a given day (1st column day, remaining columns region names, values total streams)"
  },
  {
    "objectID": "00-introduction_to_r-page.html#merging-data-i",
    "href": "00-introduction_to_r-page.html#merging-data-i",
    "title": "Introduction to R",
    "section": "",
    "text": "Often we have two separate datasets with corresponding groups of rows\n\nStreams, trackID in top10_charts.csv and Song metadata, trackID in top10_meta.csv\npurchaseid, customerid in noahs-orders.csv and productid, purchaseid in noahs-orders_items.csv and customerid, customer metadata in noahs-customers.csv\n\nCombine data using joins\n\n\ncharts &lt;- readr::read_csv(\"data/chart_data/top10_charts.csv\")\n\nRows: 7320 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): trackID, region, isrc\ndbl  (3): rank, streams, dayNumber\ndate (1): day\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsongs &lt;- readr::read_csv(\"data/chart_data/top10_meta.csv\")\n\nRows: 347 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (12): trackID, trackName, artistName, artistIds, isrc, primary_artistNa...\ndbl  (16): explicit, trackPopularity, n_available_markets, danceability, ene...\ndate  (1): releaseDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstr(charts, give.attr=FALSE)\n\nspc_tbl_ [7,320 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID  : chr [1:7320] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" ...\n $ rank     : num [1:7320] 7 6 7 7 7 8 9 9 10 10 ...\n $ streams  : num [1:7320] 26234 4276985 3688979 3255639 3478044 ...\n $ day      : Date[1:7320], format: \"2020-08-14\" \"2020-03-27\" ...\n $ dayNumber: num [1:7320] 1318 1178 1179 1180 1181 ...\n $ region   : chr [1:7320] \"at\" \"global\" \"global\" \"global\" ...\n $ isrc     : chr [1:7320] \"DEUM72004523\" \"GBAHT1901303\" \"GBAHT1901303\" \"GBAHT1901303\" ...\n\nstr(songs, give.attr=FALSE)\n\nspc_tbl_ [347 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID              : chr [1:347] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"01I9AEz658sQnQzCL3K3QG\" \"033if6Adj8fwBYsQzHOfQ8\" ...\n $ trackName            : chr [1:347] \"Fall Auf\" \"Break My Heart\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ artistName           : chr [1:347] \"Cro feat. badchieff\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra feat. Samra\" ...\n $ artistIds            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ isrc                 : chr [1:347] \"DEUM72004523\" \"GBAHT1901303\" \"DECE72000379\" \"DECE72000176\" ...\n $ explicit             : num [1:347] 0 0 1 0 0 0 0 1 0 0 ...\n $ trackPopularity      : num [1:347] 64 83 75 71 69 82 70 74 89 79 ...\n $ primary_artistName   : chr [1:347] \"Cro\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra\" ...\n $ primary_artistID     : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d\" ...\n $ artistIDs            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ albumName            : chr [1:347] \"Fall Auf\" \"Future Nostalgia\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ albumID              : chr [1:347] \"1qdHQo41Vkkgs8HtMk5b96\" \"7fJJK56U9fHixgO0HQkhtI\" \"15Njx2PcwnNsI65fnbM7Pw\" \"5cqwoGrjFr3VKYZ9ZC0eL2\" ...\n $ available_markets    : chr [1:347] \"AD, AE, AL, AR, AT, AU, BA, BE, BG, BH, BO, BR, BY, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES,\"| __truncated__ \"AD, AE, AR, AU, BE, BG, BH, BO, BR, CA, CL, CO, CR, CY, CZ, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB, GR, GT, HK,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ ...\n $ n_available_markets  : num [1:347] 92 76 79 79 87 79 3 79 92 92 ...\n $ releaseDate          : Date[1:347], format: \"2020-08-13\" \"2020-03-27\" ...\n $ releaseDate_precision: chr [1:347] \"day\" \"day\" \"day\" \"day\" ...\n $ danceability         : num [1:347] 0.5 0.73 0.73 0.701 0.84 0.795 0.814 0.774 0.641 0.571 ...\n $ energy               : num [1:347] 0.743 0.729 0.777 0.714 0.648 0.607 0.794 0.805 0.324 0.693 ...\n $ key                  : num [1:347] 2 4 1 10 10 7 7 11 11 6 ...\n $ loudness             : num [1:347] -6.65 -3.43 -6.38 -5.91 -5.54 ...\n $ mode                 : num [1:347] 1 0 0 1 0 1 1 0 1 0 ...\n $ speechiness          : num [1:347] 0.0373 0.0886 0.29 0.524 0.0489 0.23 0.0887 0.302 0.0299 0.0545 ...\n $ acousticness         : num [1:347] 0.307 0.167 0.0455 0.289 0.101 0.128 0.119 0.0509 0.698 0.0054 ...\n $ instrumentalness     : num [1:347] 0.00 1.39e-06 1.10e-03 0.00 1.00e-04 1.90e-01 9.00e-04 0.00 0.00 0.00 ...\n $ liveness             : num [1:347] 0.133 0.349 0.0759 0.0883 0.0996 0.111 0.348 0.149 0.328 0.173 ...\n $ valence              : num [1:347] 0.332 0.467 0.578 0.604 0.431 0.25 0.647 0.261 0.273 0.393 ...\n $ tempo                : num [1:347] 166.3 113 177.9 86.9 103 ...\n $ duration_ms          : num [1:347] 191827 221820 130307 173353 124690 ...\n $ time_signature       : num [1:347] 4 4 4 4 4 4 4 4 4 4 ..."
  },
  {
    "objectID": "00-introduction_to_r-page.html#merging-data-ii",
    "href": "00-introduction_to_r-page.html#merging-data-ii",
    "title": "Introduction to R",
    "section": "",
    "text": "The name of the join determines which “ids” are kept\nleft_join keeps all rows that have an id in the left dataset\ninner_join only keeps rows with ids in both datasets\n\n\ndata1 &lt;- data.frame(group = c('a', 'a', 'b','c'), value = c(1,2,3,4)) # missing group 'd'\ndata2 &lt;- data.frame(group2 = c('a', 'c', 'd'), value2 = factor(c(\"abc\", \"def\", \"ghi\"))) # missing group 'b'\n\nleft_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n\nright_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n4     d    NA    ghi\n\ninner_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def"
  },
  {
    "objectID": "00-introduction_to_r-page.html#special-joins",
    "href": "00-introduction_to_r-page.html#special-joins",
    "title": "Introduction to R",
    "section": "",
    "text": "full_join returns all rows from both datasets\nsemi_join returns only the columns of the left dataset and filters rows with id in the right dataset\nanti_join keeps only rows that do not have an id in the right table\n\n\nfull_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n5     d    NA    ghi\n\nsemi_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nfilter(data1, group %in% data2$group2)\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nanti_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     b     3"
  },
  {
    "objectID": "00-introduction_to_r-page.html#exercise-3",
    "href": "00-introduction_to_r-page.html#exercise-3",
    "title": "Introduction to R",
    "section": "",
    "text": "BE the music manager\n\n\n\n\nWho are the top 10 artists in terms of total global streams?\nWhat is their most succesful song?\nFor how many songs are do we not have meta data?\nHow many songs are there in the data? (Hint: ?n_distinct, or ?length, ?unique)\nSave the combined data as top10_all.parquet"
  },
  {
    "objectID": "00-introduction_to_r-page.html#references",
    "href": "00-introduction_to_r-page.html#references",
    "title": "Introduction to R",
    "section": "",
    "text": "Links\n\nR Logo\nNoah’s Database\n\nBibliography\n\n\nHorst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data. https://doi.org/10.5281/zenodo.3960218."
  },
  {
    "objectID": "00-introduction_to_r-page.html#footnotes",
    "href": "00-introduction_to_r-page.html#footnotes",
    "title": "Introduction to R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://aws.amazon.com/what-is/object-storage/↩︎"
  },
  {
    "objectID": "canvas/my_favorite_r_package.html#some-hints-citing",
    "href": "canvas/my_favorite_r_package.html#some-hints-citing",
    "title": "PACKAGENAME TITLE",
    "section": "Some Hints: Citing",
    "text": "Some Hints: Citing\n\nIn order to cite a package you can use the BibTex format. A sample file is provided together with this file. You can get a bibtex entry for an R package using\n\n\nprint(citation(\"PACKAGENAME\"), bibtex=TRUE)\n\ne.g.,\n\nprint(citation(\"shrinkDSM\"), bibtex=TRUE)\n\nTo cite package 'shrinkDSM' in publications use:\n\n  Winkler D, Knaus P (2022). _shrinkDSM: Efficient Bayesian Inference\n  for Dynamic Survival Models with Shrinkage_. R package version 0.2.0,\n  &lt;https://CRAN.R-project.org/package=shrinkDSM&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {shrinkDSM: Efficient Bayesian Inference for Dynamic Survival Models with\nShrinkage},\n    author = {Daniel Winkler and Peter Knaus},\n    year = {2022},\n    note = {R package version 0.2.0},\n    url = {https://CRAN.R-project.org/package=shrinkDSM},\n  }\n\n\n\nTypically you have to specify the citation key (before the first ,). E.g.,\n\n@Manual{winkler2022shrinkDSM,\n    title = {shrinkDSM: Efficient Bayesian Inference for Dynamic Survival Models with Shrinkage},\n    ...\n}\n\nYou can cite in Quarto using @citationkey\n\n\n@zeileis2008partykit found… \\(\\rightarrow\\) Zeileis, Hothorn, and Hornik (2008) found…\n… has been shown [@wickham2019tidyverse]\\(\\rightarrow\\) … has been shown (Wickham et al. 2019)\n\n… found in multiple studies [@wickham2019tidyverse; @zeileis2008partykit] \\(\\rightarrow\\) … found in multiple studies (Wickham et al. 2019; Zeileis, Hothorn, and Hornik 2008)\n\n… also in their earlier study [-@wickham2019tidyverse] \\(\\rightarrow\\) … also in their earlier study (2019)\n\n\n[see @wickham2019tidyverse, p. 23] \\(\\rightarrow\\) (see Wickham et al. 2019, 23)\n\n\n@wickham2019tidyverse [p. 23] \\(\\rightarrow\\) Wickham et al. (2019, 23)"
  },
  {
    "objectID": "canvas/my_favorite_r_package.html#some-hints-document-options",
    "href": "canvas/my_favorite_r_package.html#some-hints-document-options",
    "title": "PACKAGENAME TITLE",
    "section": "Some hints: document options",
    "text": "Some hints: document options\n\nThe code on top of this file surrounded by --- is called a yaml-header\n\nThere you can specify the title, subtitle, author, etc.\nIt also defines the format of the presentation: revealJS\n\nAnd links to files used to render the presentation (logo, bibliography)\nFeel free to play around with those options (e.g., change some false to true)\nChange the theme if you want to"
  },
  {
    "objectID": "canvas/my_favorite_r_package.html#references",
    "href": "canvas/my_favorite_r_package.html#references",
    "title": "PACKAGENAME TITLE",
    "section": "References",
    "text": "References\n\nautomatically printed on the last slide\n\n{.scrollable} after the slide header makes the slide scrollable. E.g.,\n\n## References {.scrollable}\nThe References\n\n\n\n\nPACKAGENAME FOOTER\n\n\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nZeileis, Achim, Torsten Hothorn, and Kurt Hornik. 2008. “Model-Based Recursive Partitioning.” Journal of Computational and Graphical Statistics 17 (2): 492–514. https://doi.org/10.1198/106186008X319331."
  }
]